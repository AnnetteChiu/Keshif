@import "lesshat";

/*********************************
kshf library

Copyright (c) 20014-2015, University of Maryland
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of the University of Maryland nor the names of its contributors
  may not be used to endorse or promote products derived from this software
  without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

************************************ */


@layout_animation: ~'transform 700ms ease-in-out, background-color 250ms ease-in-out';
@bar_animation: ~'transform 700ms ease-in-out, background-color 100ms linear, opacity 200ms linear';
@reorder_animation: ~'all 500ms ease-in-out';

@color_bars: #B1BDC5; //#B0BFCA; //#98ABB9; //#8699A8;
@color_distr_total: #DEE2E6;
@color_onRecord: lighten(orangered, 10%); //#B2B227;
@color_onRecord_back: #EFEADF;
@color_bar_preview: lighten(orangered, 10%);
@color_Compare_A: darkslategray; //#222222;
@color_Compare_B: #2FD71B; //#222222;
@color_Compare_C: #FFFEDC; // purple; //#222222;
@color_axis_line: rgb(182, 179, 179);
@color_item_count: #969DA3;;
@color_preview: lighten(orangered, 10%); //#B2B227;

@color_query_and: #1D4870;
@color_query_or:  #1C737A;
@color_query_not: gray;

@color_listHeader_background: rgb(239, 234, 223);

@color_set_containment: rgb(64, 0, 255);
@color_setPair_background: rgba(234, 234, 234, 0.5);

.kshf{
    .display(flex);
    .flex-direction(column);
    position: relative;
    left: 0px;

    font-family: 'Roboto', Helvetica, Arial, sans-serif;
    //font-family: Helvetica, Arial, sans-serif;
    text-rendering: optimizeLegibility; // People say this has big performance drawbacks

    background-color: white;
    box-shadow: 0px 0px 10px white;

    .box-sizing(border-box);
    *{ .box-sizing(border-box); }

    &[noanim=true]{
      .aggrGlyph{ 
        .transition(~'none');
        &[class^="measure_"]{ .transition(~'none'); }
      }
    }
    &[noanim=false]{
      .chartAxis_Measure {
        .transition(@layout_animation);
        .tick{ .transition(~'transform 500ms ease-out'); }
      }
      .wrapper{ .transition(~'height 700ms ease-in-out'); }
      .panels_Above{ .transition(~'height 700ms ease-in-out'); }
      .controlLine {
        > .base { .transition(@bar_animation); }
        > .handle{ .transition(@bar_animation); }
      }
    }
    &[drag_cursor="grab"]{
      cursor: -moz-grab;
      cursor: -webkit-grab;
      cursor: grab;
    }
    &[drag_cursor="grabbing"]{
      cursor: -moz-grabbing;
      cursor: -webkit-grabbing;
      cursor: grabbing;
    }
    .panel[catLabelDragging=true] .chartCatLabelResize{
      display: block !important;
      border-left: solid lightgray 2px;
    }
    &[authoringMode]{
      //left: 120px;
      > .attributePanel{
          .display(flex);
      }
      > .panel_Wrapper{
        margin-left: 220px;
      }
      .saveBrowserConfig{
        display: inline-block;
      }
      .configUser{
        display: inline-block;
      }
      .kshfSummary{
        &[collapsed=false][viewType='list']:hover {
          .chartCatLabelResize{ display: block !important; }
        }
      }
      .recordName{
        cursor: text;
        pointer-events: all !important;
        &:hover{
          margin: -1px;
          border: solid 1px gray;
        }
      }
      .recordInfo{ pointer-events: none !important; }
      .summaryName_text{ 
        cursor: text;
        &:hover {
          cursor: text;
          margin: -1px;
          border: solid 1px gray;
        }
      }
      .summaryConfig_UnitName{ display: block;}
      .recordDisplay{
        &:hover .buttonRecordViewRemove{ display: block; }
        &[displaytype="list"]:hover .dragWidthHandle{ display: block; }
      }
      .recordDisplay:not([displaytype="map"]) > .recordDisplayHeader > .itemRank_control{
        display: inline-block;
      }
      .panel:hover > .panelAdjustWidth{
        display: block;
      }
      .buttonSummaryRemove{ display: inline-block !important; }
    }
    &[measurefunc="Count"]{
      .measureFunction_Count{ color: black !important; font-weight: 600; }
    }
    &[measurefunc="Avg"]{
      .measurePercentControl{ pointer-events: none !important; }
      .scaleModeControl{ pointer-events: none !important; }
      .measurePercentControl:after{ content: "Avg" !important; }
      .measureFunction_Avg{ color: black !important; font-weight: 600; }
      .measureSelectBox_Content_RecordName{ margin-top: 2.4em}
    }
    &[measurefunc="Sum"]{
      .measurePercentControl:after{ content: "Sum" !important; }
      .measureFunction_Sum{ color: black !important; font-weight: 600; }
      .measureSelectBox_Content_RecordName{ margin-top: 1.2em}
    }
    &[percentLabelMode]{
      .measurePercentControl{
        &::after{ content: "%"; }
        &[highlight="true"]::after{ content: '#'; }
      }
      .chartAxis_Measure > .tick > .text:after{ content: "%"; }
      //.scaleBound::after{ content: "%"; }
    }
    &[relativeMode]{
      .chartAxis_Measure > .tick > .text::after{ content: "%"; }
      .scaleBound::after{ content: "%"; }
      .highlightedAggrValuePointer{ display: block; }
      [class="measure_Active"][subset]{ // setPair
        stroke-width: 2px;
        stroke: @color_set_containment;
      }
      .setPairBackground{ opacity: 0 !important; }
      .Summary_Set > .summaryControls > .strengthControl {
        background: -moz-linear-gradient(left, #e6e6f7 0%, #9595db 100%); /* FF3.6+ */
        background: -webkit-gradient(linear, left top, right top, color-stop(0%,#e6e6f7), color-stop(100%,#9595db)); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(left, #e6e6f7 0%,#9595db 100%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(left, #e6e6f7 0%,#9595db 100%); /* Opera 11.10+ */
        background: -ms-linear-gradient(left, #e6e6f7 0%,#9595db 100%); /* IE10+ */
        background: linear-gradient(to right, #e6e6f7 0%,#9595db 100%); /* W3C */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e6e6f7', endColorstr='#9595db',GradientType=1 ); /* IE6-9 */
        border-right-color: @color_set_containment;
        color: black;
        text-shadow: 0px 0px 2px #FFFFFF;
        > .strengthLabel{ display: inline-block; }
      }
    }
    &[selectCompare_A]{
      .measure_Compare_A{ opacity: 1 !important; pointer-events: all !important; }
      .percentileGroup[percentilechartvisible="Extended"] > .percentileChart_Compare_A{ display: block; }
    }
    &[selectCompare_B]{
      .measure_Compare_B{ opacity: 1 !important; pointer-events: all !important;}
      .percentileGroup[percentilechartvisible="Extended"] > .percentileChart_Compare_B{ display: block; }
    }
    &[selectCompare_C]{
      .measure_Compare_C{ opacity: 1 !important; pointer-events: all !important;}
      .percentileGroup[percentilechartvisible="Extended"] > .percentileChart_Compare_C{ display: block; }
    }
    &[recordDisplayMapping="sort"]{
      .kshfSummary[summary_type="interval"] {
        .headerGroup .summaryIcons > .useForRecordDisplay{
          &:before{ content: "\f0dc"; } // Sorting icon
          &:hover{ color: orangered; }
        }
      }
    }
    &[recordDisplayMapping="color"]{
      .kshfSummary[summary_type="interval"]{
        .headerGroup .summaryIcons > .useForRecordDisplay{
          // Great CSS trick at https://codepen.io/thebabydino/pen/hkxGp
          position: relative;
          margin: 0;
          border: solid 1px white;
          width: 1em; height: 1em;
          border-radius: 50%;
          background: 
            linear-gradient(36deg, #272b66 42.34%, transparent 42.34%) 0 0,
            linear-gradient(72deg, #2d559f 75.48%, transparent 75.48%) 0 0,
            linear-gradient(-36deg, #9ac147 42.34%, transparent 42.34%) 100% 0,
            linear-gradient(-72deg, #639b47 75.48%, transparent 75.48%) 100% 0, 
            linear-gradient(36deg, transparent 57.66%, #e1e23b 57.66%) 100% 100%,
            linear-gradient(72deg, transparent 24.52%, #f7941e 24.52%) 100% 100%,
            linear-gradient(-36deg, transparent 57.66%, #662a6c 57.66%) 0 100%,
            linear-gradient(-72deg, transparent 24.52%, #9a1d34 24.52%) 0 100%, 
            #43a1cd linear-gradient(#ba3e2e, #ba3e2e) 50% 100%;
          background-repeat: no-repeat;
          background-size: 50% 50%;
          transition: 1s;
          &:hover { transform: rotate(360deg); }
          // ::before{ content: "\f278"; } // Map-icon
        }

        &[usedforsorting="true"] > .wrapper > .summaryInterval > .mapColorBar { .display(flex); }
      }
    }
    &[showDropZone=true]{
      &:not([dropattrtype~="unique"]){
        .kshfSummary[collapsed=false]{
          .flex-grow(3);
          .flex(3);
          overflow: hidden;
        }
        .panel[hassummaries="true"] {
          > .dropZone_between_wrapper{ display: block; }
          > .dropZone_panel{
            display: block;
            width: 100%;
            height: 100%;
            background-color: #EEEEEE;//#E9E9E9;
            opacity: 0.3;
            cursor: default;
            border-width: 0px;
            border-radius: 5px;
            > .dropIcon{ display: none; }
            > .dropText{ display: none; }
          }
        }
        .panel[hassummaries="false"] {
          > .dropZone_panel{ display: block; }
          &.panel_side{ z-index: 300; }
        }
      }
      &[dropSource="browser"]{
        > .attributePanel > .attributeList > .dropZone_AttribList{ display: block; }
      }
      &[dropattrtype~="unique"] {
        .recordDisplay[hasRecordView="false"]{
          .flex(1);
          min-height: 50px;
        }
        .dropZone_recordView{ display: block !important; }
      }
      &[dropattrtype~="categorical"][dropattrtype~="singlevalue"] {
        .dropZone_textSearch{ display: block !important; }
      }
    }
    &[showScaleModeControls]{
      .scaleModeControl{ opacity: 1; }
    }

    .unitName{
      margin-left: 1px;
      opacity: 0.6; //color: gray;
    }
    
    .saveBrowserConfig{
      display: none;
    }
    .configUser{
      display: none;
      &[auth="false"] {
        &:before{ content: "\f090"; } // fa-sign-in
      }
      &[auth="true"] {
        &:before{ content: "\f007"; } // fa-user
        &[public="false"]:before { content: "\f21b"; } // fa-user-secret
        &:hover:before { content: "\f08b"; } // fa-sign-out
      }
    }

    .fa-dropbox{
      color: #007EE5 !important;
    }

    .sortButton{
      cursor: pointer;
      &:hover{ color:orangered }
      &:before{ content: "\f161"; } // decreasing
      &[inverse='true']:before{ content: "\f160"; } // increasing
    }

    // Used only in breadcrumbs
    .AndOrNot{
      color: white;
      display: inline-block;
      font-weight: 300;
      font-size: 0.8em;
      vertical-align: top;
      border-radius: 3px;
      padding: 0px 2px 0px 2px;
      margin-top: 1px;
      opacity: 0.7;
      &.AndOrNot_And{ background-color: @color_query_and; }
      &.AndOrNot_Or{ background-color: @color_query_or; }
      &.AndOrNot_Not{ background-color: @color_query_not; }
    }

    > .panel_Wrapper{
      .transition(margin-left 700ms ease-in-out);
      margin-left: 0px;
      z-index: 10;
    }

    .editableText:focus{
      background-color: white;
      box-shadow: 0 0 3px #2CABCF;
      border-color: #2CABCF;
      border-style: solid;
      border-width: 1px;
      outline: 0 none;
      margin: 0px;
    }

    > .attributePanel{
      display: none;
      .flex-direction(column);
      position: absolute;

      left: -0px;
      width: 215px;
      top: 0px;
      height: 100%;

      > .attributePanelHeader{
        cursor: default;
        text-align: center;
        border-radius: 3px;
        background-color: #efeadf;
        text-shadow: 0px 1px lightgray;
        padding-top: 3px;
        box-shadow: 0px 0px 2px #B0A47D;
        > .addAttrib{
          display: none;
          color: gray;
          position: absolute;
          left: 5px;
          cursor: pointer;
          &:hover{ color:orangered; }
        }
        > .hidePanel{
          color: gray;
          position: absolute;
          left: 3px;
          cursor: pointer;
          &:hover{ color:orangered; }
        }
      }

      > .attributePanelControl{
        background-color: white;
        border-radius: 5px;
        box-shadow: 0px 0px 1px gray;
        margin: 4px 0px 2px;
        .display(flex);
        .flex-direction(row);

        > .attribFilterIcon{
          margin: 2px;
          color: gray;
        }

        > .addAllSummaries{
          width: 20px;
          display: inline-block;
          cursor: pointer;
          &:hover{ color: orangered; }
        }

        > .attribTextSearch{
          .flex(1);
        }

      } // attributePanelControl

      > .attributeList{
        .display(flex);
        .flex(1);
        .flex-direction(column);
        overflow-y: auto;
        overflow-x: hidden;
        > .dropZone_AttribList{
          .flex(1);
          .order(10);
          display: none;
          border-radius: 10px;
          border: solid 1px rgb(211, 219, 226);
          box-shadow: 0px 0px 1px rgb(190, 200, 209);
          margin: 2px;
        }
      }

      .newAttribute{
        display: block;
        text-align: center;
        border-radius: 3px;
        background-color: #dfd7d7;
        border: solid 1px gray;
        cursor: pointer;
        color: #C0B1B1;
        font-size: 0.8em;
        margin: 2px;
        &:hover{
          background-color: #DBD4D4;
          border-color: black;
          color: #877676;
        }
      }

      .nugget{
        display: block;
        position: relative;
        font-size: 0.8em;
        padding: 1px;
        margin: 1px;
        //min-height: 34px;
        left: 0px;
        border-radius: 3px;
        background-color: rgb(232, 232, 232);
        border: solid 1px lightgray;
        cursor: -moz-grab;
        cursor: -webkit-grab;
        cursor: grab;
        .user-select(none);
        .transition(opacity 400ms linear, transform 400ms ease-in-out);
        > .summaryName{
          display: inline-block;
          margin: 1px;
          overflow-wrap: break-word;
          max-width: calc(~"100% - 70px");
          padding: 1px;
          &:hover{ 
            cursor: text;
            padding: 0px;
            border: solid 1px gray;
          }
        }
        > .editCodeButton{
          display: none;
          font-size: 0.9em;
          color: black;
          cursor: pointer;
          &:hover{ color: orangered; }
        }
        > .summaryTypeIcon{ float: right; }
        > .addFromAttribute_Button{
          display: none;
          margin-left: 5px;
          color: gray;
          cursor: pointer;
          &:hover{ color: orangered; }
        }
        > .splitCatAttribute_Button{
          display: none;
          cursor: pointer;
          color: gray;
          &:hover{ color: black; }
        }
        
        .nuggetInfo{
          display: inline-block;
          width: 100%;
          .flex(1);
          .align-self(center);
          font-weight: 500;
          font-size: 0.7em;
          vertical-align: top;
          text-align: center;
          > .num_left{
            float:left;
            margin-left:2px;
          }
          > .num_right{
            float:right;
            margin-right:2px;
          }
          > .fa{ color: gray; }
        }
        &[filtered='true']{ display: none; }
        &[hidden='true']{ display: none; }
        &[aggr_initialized=false]{
          > .nuggetViz {
            > .nuggetInfo{
              font-size: 2em;
              text-align: center;
              position: relative;
              &:before{ content: "\f110"; } // spinner
            }
            > .nuggetChart{ display: none !important; }
            &:hover{
              > .nuggetInfo{
                -webkit-animation: fa-spin 2s infinite linear;
                animation: fa-spin 2s infinite linear;
              }
            }
          }
        }
        > .nuggetViz{
          .display(flex);
          height: 30px;
          background-color: #F8F6F6;
          width: 50px;
          float: right;
          width: 60px;
          border-radius: 5px;
          border: solid 1px rgb(200,200,200);
          > .nuggetChart{
            .flex(1);
            height: 30px;
            margin-right: 3px;
            margin-left: 3px;
            > .nuggetBar{
              .flex(1);
              display: block;
              background-color: @color_bars;
            }
          }
        }
        &:hover{
          background-color: #E8E0CE;
          border-color: #B8B6B1;
          > .nuggetViz{ border-color: gray; }
        }
        &[datatype~="interval"]{
          > .nuggetViz{
            .flex-direction(column);
            > .nuggetChart{
              .display(flex);
              .flex-direction(row);
              > .nuggetBar{ .align-self(flex-end); }
            }
          }
          .nuggetChart{ .order(1); }
          .nuggetInfo{ .order(2); max-height: 1em; }
        }
        &[datatype~='time']{
          &:hover > .addFromAttribute_Button{ display: inline-block; }
          .num_right:before { content: '\f017'; } // fa-clock-o
        }
        &[datatype~='multivalue']{
          &:hover > .addFromAttribute_Button{ display: inline-block; }
        }
        &[datatype~="categorical"]{
          > .nuggetViz{
            .flex-direction(row);
            > .nuggetChart{
                .display(flex);
                .flex-direction(column);
                height: 100%;
            }
          }
        }
        &[datatype~="categorical"][datatype~="singlevalue"]:hover{
          > .splitCatAttribute_Button{
            display: inline-block;
          }
        }
        &[state='custom']{
          > .editCodeButton{ display: inline-block; }
        }
        &[moved]{ opacity: 0.5 !important; }
        &[anim="disappear"]{
          opacity: 0;
          .transform(~'translateX(100px)');
        }
        &[anim="appear"]{
          opacity: 1;
          .transform(~'translateX(0px)');
        }
      }
    } // .attributePanel

    .textSearchBox{
      white-space: nowrap;
      position: relative;
      height: 18px;

      > .textSearchInput {
        font-size: 0.7em;
        font-weight: 700;
        border-width: 0px;
        color: #cb5454;
        background-color:rgba(244, 244, 244,0);
        pointer-events: all;
        margin: 2px 0px 0px 0px;
        cursor: text;
        &:focus{
          outline-color: #cb5454;
          outline-width: 2px;
        }
        &:hover{
          border: solid 1px #cb5454;
          padding: 0px 0px 0px 0px;
        }
        &::-webkit-input-placeholder {
          font-weight: 300;
          color: #cb5454;
        }
        &:focus::-webkit-input-placeholder { color: #F3CDCD; }
        &:hover::-webkit-input-placeholder { color: #F3CDCD; }
      }

      > .textSearchControl{
        vertical-align: middle;
        padding-left: 1px;
        font-size: 0.7em;
        pointer-events: none;
        color: #cb5454;
        cursor: default;
        &:before{ content: "\f002"; } // Search icon
        &[showClear=true]{
          cursor: pointer;
          pointer-events: all;
          color: gray;
          &:hover{ color: #cb5454; }
          &:before{ content: "\f057"; }
        }
      }
    } // textSearchBox

    .recordInfo{
      .user-select(none);
      display: block;
      position: relative;
      white-space: nowrap;
      cursor: default;
      font-size: 1.2em;
      font-weight: 700;
      z-index: 10;
      margin-bottom: 2px;
      margin-left: 2px;
      > .activeRecordMeasure{
        display: inline-block;
        text-align: right;
        margin-right: 3px;
        > .unitName{ font-weight: 400;}
      }
      > .measureFuncType{
        font-weight: 400;
      }
      > .recordName{
        pointer-events: none;
      }
      &[changeMeasureBox]{
        cursor: pointer;
        &:hover{ color: orangered; }
      }
    }

    .panel_Basic{
        .display(flex);
        .flex-direction(row);
        position: relative;
        background-color: rgb(239, 234, 223);
        box-shadow: 0px 0px 2px #B8AF9A;
        margin-bottom: 4px;
        padding-bottom: 2px;
        // ***************************************************************************
        // MEASURE SELECT BOX
        > .measureSelectBox_Wrapper{
          position: relative;
          &[showMeasureBox="true"] > .measureSelectBox{ display: block; }
        }
        .measureSelectBox{
          display: none;
          position: absolute;
          left: 0px;
          top: 0px;
          margin-top: 22px;
          z-index: 2000;
          background-color: white;
          font-size: 0.9em;
          font-weight: 400;
          border-radius: 4px;
          border: solid 1px gray;
          color: black;
          box-shadow: 2px 2px 8px gray;
          > .measureSelectBox_Close{
            position: absolute;
            top: 2px;
            right: 2px;
            cursor: pointer;
            font-size: 1.2em;
            color: gray;
            &:hover{ color: orangered; }
          }
          > .measureSelectBox_Header{
            font-weight: 700;
            padding: 3px;
            background-color: #DDD9D0;
            border-radius: 4px 4px 0px 0px;
            border-bottom: solid 1px gray;
            white-space: nowrap;
            cursor: -moz-grab;
            cursor: -webkit-grab;
            cursor: grab;
          }
          > .measureSelectBox_Content{
            display: block;
            position: relative;
            white-space: nowrap;
            padding: 4px 10px;
            .display(flex);
            .flex-direction(row);
            > .measureSelectBox_Content_FuncType{
              .flex(1);
              vertical-align: top;
              text-align: right;
              > .measureFunctionType{
                display: block;
                margin-bottom: 2px;
                cursor: pointer;
                color: gray;
                &:hover{ color: orangered; }
              }
            }
            > .measureSelectBox_Content_Summaries{
              // Select box
              .flex(1);
              display: block;
              padding: 0.5em 5px 0px 5px;
              margin: 1em 0px 0px 5px;
              text-align: center;
              border-top: dotted 1px lightgray;
            }
            > .measureSelectBox_Content_RecordName{
              .flex(1);
              display: block;
              vertical-align: top;
              cursor: default;
              font-weight: 600;
              padding-left: 4px;
            }
          }

          > .measureOptionGroup{
            margin: 1px 6px;
            white-space: nowrap;
            cursor: pointer;
            border-bottom: solid 1px #CBC5B9;
            > .measureOption{
              display: inline-block;
              vertical-align: top;
              &:hover{ 
                color: orangered;
                //background-color: #E1DDD3;
              }
            }
            > .measureType_Box{
              display: inline-block;
              border-left: solid 1px gray;
              margin-left: 2px;
              > .measureType{
                cursor: pointer;
                display: block;
                margin-left: 2px;
                &:hover{ 
                  color: orangered;
                  //background-color: #E1DDD3;
                }
              }
            }
          }
        }

        > .breadcrumbs{
            .flex(1);
            padding: 2px 2px 4px 5px;
            font-size: 0.8em;
            vertical-align: top;
            > .crumb{
              display: inline-block;
              position: relative;
              cursor: pointer;
              color: rgb(37, 33, 18);
              font-weight: 300;
              // border: 1px rgb(104, 91, 43) solid;
              box-shadow: 1px 1px 1px rgb(78, 71, 43);
              background-color: rgba(255,255,255,0.5);
              margin-right: 5px;
              padding-left: 2px;
              max-width: 0px;
              .transition(~"all 250ms linear");
              > .crumbText{
                pointer-events: none;
                display: block;
                white-space: nowrap;
                overflow: hidden;
                margin-left: 13px;
                margin-right: 2px;
                > .crumbHeader{
                  padding: 1px;
                  font-size: 1em;
                  font-weight: 700;
                  &:after{ content: ': '; }
                }
                > .crumbDetails{
                  padding:1px 0px 1px 0px;
                  display: inline;
                  > b{ font-weight: 700; }
                  > .unitName{ font-weight: 300; }
                }
              }
              > .clearCrumbButton{
                width: 14px;
                height: 100%;
                position: absolute;
                pointer-events: none;
                font-size: 11px;
                padding: 1px;
                left: 0px;
                text-align: center;
                color: white;
                .transition(~"background-color 100ms linear,color 100ms linear, opacity 400ms");
              }
              &[filtered=false]{ display: none; }
              &[ready=true]{ max-width: 100%; }
              &[ready=false]{ max-width: 0px; }
              &.crumbMode_Filter {
                > .clearCrumbButton {
                  background-color: #788D9B;
                  border: solid 1px #788D9B;
                  > .fa::before{ content: "\f0b0"; } // cross
                }
              }
              &.crumbMode_Highlight {
                > .clearCrumbButton {
                  background-color: orangered;
                  border: solid 1px orangered;
                  > .fa::before{ 
                    content: "\f245";
                    position: relative;
                    top: 0px;
                    left: 1px;
                  } // mouse pointer
                }
              }
              &[class*='crumbMode_Compare'] {
                > .clearCrumbButton > .fa::before{ 
                  content: "\f023"; // lock
                  font-size: 1.1em;
                  position: relative;
                  top: 1px;
                }
              }
              &[class*='crumbMode_Compare_A'] > .clearCrumbButton { background-color: @color_Compare_A; }
              &[class*='crumbMode_Compare_B'] > .clearCrumbButton { background-color: @color_Compare_B; }
              &[class*='crumbMode_Compare_C'] > .clearCrumbButton { 
                background-color: @color_Compare_C; 
                color: black;
              }
              &:hover{
                background-color: rgba(255,255,255,1.0);
                > .crumbText{ text-decoration: line-through; }
//                > .clearCrumbButton >.fa::before{  content: "\f13e"; } // unlock
                > .clearCrumbButton >.fa::before{  content: "\f00d"; } // cross
              }
            }
        }
        > .filterClearAll{
            opacity: 0;
            pointer-events: none;
            position: relative;
            top: 2px;
            height: 1em;
            cursor: pointer;
            color: #252112;
            font-weight: 300;
            border: 1px #685b2b solid;
            background-color: #E9E2CE;
            white-space: nowrap;
            .transition(~"background-color 100ms linear, opacity 300ms linear");
            .title{
              padding: 0px 2px;
              font-size: 0.8em;
              font-weight: 500;
              vertical-align: top;
            }
            &:hover{
              background-color: white;
              box-shadow: none;
            }
            &[active=true]{
              opacity: 1;
              pointer-events: all;
            }
        }
        > .rightBoxes{
          font-size: 1.0em;
          color: #635d46;
          padding-right: 2px;
          white-space: nowrap;
          > .fa{
            cursor: pointer;
            margin-left: 4px;
            &:hover{ color: #cb5454; }
          }
          > .showConfigButton{
            display: none;
            &:hover{
              animation: fa-spin 2s infinite linear;
              -webkit-animation: fa-spin 2s infinite linear;
            }
          }
          > .datasource{
            display: none;
            text-decoration: none;
            color: #635d46; // if dom type is a, it will show visited links in different color
          }
        } // rightBoxes
    }

    .panels_Above{
      .display(flex);
      .flex-direction(row);
    }

    .attribDragBox{
        position: absolute;
        top: 0px;
        left: 0px;
        min-height: 21px;
        // height: 22px; // auto... (based on text within)
        width: 200px;
        .background-image(~"linear-gradient(right, rgba(245, 245, 245, 1) 0%, rgba(241, 241, 241, 1) 20%, rgba(241, 241, 241, 1) 80%, rgba(245, 245, 245, 1) 100%);");
        //background-color: lightgray;
        border-radius: 3px;
        border: solid 1px lightgray;
        box-shadow: 5px 5px 20px gray;
        display: none;
        z-index: 400;
        text-align: center;
        font-weight: 500;
        font-size: 0.9em;
        cursor: default;
        text-rendering: initial;
        pointer-events: none;
    }

    > .warningBox_wrapper{
        position: absolute;
        top: -20px;
        opacity: 0;
        margin: 0 auto;
        width: 100%;
        text-align: center;
        z-index: 50;
        pointer-events: none;
        .transition(~'opacity 500ms ease-in-out, top 500ms');
        > .warningBox{
          display: inline-block;
            background-color: #F8EE82;
            border-radius: 5px;
            font-size: 0.8em;
            font-weight: 100;
            padding: 2px 5px;
            border: solid 1px rgb(214, 206, 121);
            box-shadow: 1px 1px 3px gray;
            > .warningText{
              cursor: default;
              > a{
                color: #665F17;
                font-weight: 500;
              }
            }
            > .dismiss{
              margin-left: 5px;
              color: gray;
              cursor: pointer;
              text-decoration: underline;
              font-size: 0.8em;
              &:hover{ color: orangered; }
            }
        }
        &[shown=true]{
            opacity: 1;
            top: 5px;
            pointer-events: all;
        }
    }

    > .pointerBlock{
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: -10;
        pointer-events: none;
        &[active]{
            z-index: 700;
            pointer-events: all;
        }
    }

    .panel {
        > .dropZone_between_wrapper{
            display: none;
            .flex-grow(1);
            position: relative;
            margin-top: 2px;
            z-index: 340;
            border-radius: 5px;
            //background-color: rgb(152, 157, 162);
            //height: 0px;
            width: calc(~"100% - 3px");
            .transition(flex-grow 450ms ease-in-out, background-color 250ms linear, width 500ms ease-in-out);
            > .dropZone_between{
                overflow: hidden;
                border-radius: 5px;
                border: solid 1px rgb(173, 180, 186);
                box-shadow: 1px 1px 1px rgb(173, 179, 183);
                position: relative;
                height: 22px;
                text-align: center;
                overflow: hidden;
                > .dropText{
                    vertical-align: top;
                    margin-top: 2px;
                }
            }
            &[hovered=true]{
                .flex-grow(4);
                position: relative;
                background-color: rgba(217, 224, 230, 0.7);
                > .dropZone_between{
                    > .dropIcon{
                        color: orangered;
                    }
                }
            }
        }
        .dropZone{
            background-color: rgba(217, 224, 230, 0.7);
            text-align: center;
            &[readyToDrop=true]{
                background-color: rgb(255, 188, 163);
                border-color: orangered;
                cursor: s-resize;
                > .dropText{
                    display: inline-block;
                }
            }
        }
        .dropZone_summary{
            z-index: 250;
            position: relative;
            cursor: default;
            .transition(~"background-color 100ms linear, width 300ms ease-in-out");
            &:hover{ background-color: rgb(255, 188, 163); }
            > .dropIcon{
                margin: 0px;
                font-size: 1.5em;
                font-weight: 700;
                color: #7E8A96;
                text-shadow: 1px 1px 1px #B6BCC2;
            }
        }
        > .dropZone_panel{
            display: none;
            border-color: gray;
            border-style: solid;
            border-width: 0px;
            // border-radius: 10px; // Set depending on the pane;
            position: absolute;
            z-index: 230;
        }
        .dropIcon{
            pointer-events: none;
            margin: 0px;
            font-size: 2em;
            color: #7E8A96;
            text-shadow: 1px 1px 1px #B6BCC2;
            display: inline-block;
        }
        .dropText{
            display: none;
            margin-left: 4px;
            font-size: 1.0em;
            font-weight: 300;
        }
        &[hidebars=true] {
            .catGlyph{ display:none; }
        }
        &[hidebaraxis=true] {
          .summaryCategorical{
            .chartAxis_Measure{ display:none; }
            .barChartMainInfo { display:none; }
          }
        }
        > .panelAdjustWidth{
            display: none;
            opacity: 0;
            position: absolute;
            height: 100%;
            width: 0px;
            top: 0px;
            border-width: 0px 2px 0px 0px;
            border-style: dotted;
            border-color: lightgray;
            cursor: col-resize;
            opacity: 0.8;
            z-index: 10;
            pointer-events: all;
            &:hover{ border-color: gray; border-style: dashed; }
            &[dragging]{ 
                border-color: gray; 
                border-style: dashed;
                display: block;
            }
        }
        &.panel_bottom{
            .display(flex);
            .flex-direction(column);
            width: 100%;
            position: relative;
            > .dropZone_panel{
                bottom: 0px;
                height: 30px;
                width: 100%;
                border-radius: 30px 30px 0px 0px;
                border-top-width: 2px;
            }
            > .dropZone_between_wrapper > .dropZone_between{
                > .dropIcon{
                    display: inline-block;
                }
                > .dropText{
                    display: inline-block;
                    vertical-align: top;
                }
            }
        }
        &.panel_side{
            .display(flex);
            .flex-direction(column);
            z-index: 9;
            vertical-align: top;
            position: relative;
            height: 100%;
            > .dropZone_panel{
                top: 0px;
                height: 100%;
                width: 50px;
                z-index: 231; // above the middle panel
                > .dropIcon{
                    margin-top: 150px;
                    top: 200px;
                }
            }
        }
        &.panel_left{
            > .dropZone_panel{
                left: 0px;
                border-radius: 0px 40px 40px 0px;
                border-right-width: 2px;
            }
            > .panelAdjustWidth{
                right: -2px;
            }
        }
        &.panel_right{
            > .dropZone_panel{
                right: 0px;
                border-radius: 40px 0px 0px 40px;
                border-left-width: 2px;
            }
            > .panelAdjustWidth{
                left: -2px;
            }
        }
        &.panel_middle{
            .display(flex);
            .flex-direction(column);
            .flex(1);
            position: relative;
            vertical-align: top;
            position: relative;
            > .dropZone_panel{
                bottom: 0px;
                height: 100%;
                width: 100%;
                left: 0px;
                border-radius: 40px 40px 0px 0px;
                border-top-width: 2px;
            }
        }
        &.panel_resize{
          position: absolute;
          right: 0px;
          bottom: 0px;
          cursor: nwse-resize;
          width: 0;
          height: 0;
          z-index: 2500;
          border-right: 16px solid lightgray;
          border-top: 16px solid transparent;
          &:hover{ border-right: 16px solid orangered; }
          &[dragging="true"]{ border-right: 16px solid orangered; }
        }

        &.panel_overlay {
          position: absolute;
          height: 100%;
          width: 100%;
          z-index: 2000;
          transform: scale(1);
          text-align: center;
          .transition(~'transform 500ms ease-in-out, opacity 500ms');

            > .background{
              width: 100%;
              height: 100%;
              z-index: -2;
              background: #0b0b0b;
              opacity: 0.8;
              position: absolute;
              .transition(~'opacity 0.5s');
              border-radius: 5px;
            }
            > .overlay_content{
              display: none;
              margin: auto;
              box-shadow: 0px 0px 20px black;
              border-radius:15px;
              background-color:white;
              opacity: 1.0;
              z-index: 1043;
              max-height: 90%;
              max-width: 90%;
              overflow-y: auto;
              overflow-x: hidden;
              > .overlay_Close{
                font-size: 1.2em;
                position: absolute;
                right: 3px;
                top: 3px;
                cursor: pointer;
                color: gray;
                &:hover{ color: orangered; }
              }
            }

            > .overlay_source{
                background-color:white;
                width: 550px;
                height: 270px;
                position: absolute;
                top: 0; left: 0; bottom: 0; right: 0;

                .fa-info-circle{
                    color: gray;
                    cursor: pointer;
                    padding: 0px 5px;
                    &:hover{ color: black; }
                }

                > .sourceHeader{
                    font-weight: 700;
                    font-size: 1.3em;
                    margin: 5px 5px 0px 5px;
                }

                > .source_wrapper{
                    width: 530px;
                    display: inline-block;
                    margin: 5px;
                    padding: 5px;
                    border: solid 1px lightgray;
                    border-radius: 5px;
                    > .sourceOptions{ margin-bottom: 3px; }
                    .gdocLink{ width: 350px; }
                    .fileLink{
                        width: 350px;
                        display: none;
                    }
                    .sourceOption{
                        display: inline-block;
                        border: solid 1px lightgray;
                        padding: 2px 4px;
                        border-radius: 7px;
                        font-weight: 300;
                        margin: 0px 2px;
                        font-size: 0.8em;
                        cursor: pointer;
                        color: rgb(160, 160, 160);
                        &:hover{
                            color: black;
                            box-shadow: 0px 0px 1px gray;
                        }
                    }
                    .gdocLink_ready{
                        opacity: 0;
                        pointer-events: none;
                        &:before{
                            content: "\f057"; // X
                            color: red;
                        }
                        &[ready=true]{
                            pointer-events: all;
                            &:before{
                                content: "\f058"; // Check
                                color: green;
                            }
                        }
                    }
                }
                &[selected_source_type="GoogleSheet"] {
                  .sourceOption[source_type="GoogleSheet"]{
                    background-color: #EEE;
                    color: black;
                    cursor: default;
                  }
                  .tableHeader:before{ content: "Sheet"; }
                }
                &[selected_source_type="Dropbox"] {
                  .sourceOption[source_type="Dropbox"]{
                    background-color: #EEE;
                    color: black;
                    cursor: default;
                  }
                  .tableHeader:before{ content: "Cloud-File"; }
                  > .sheetInfo .fileType_wrapper{ display: inline-block; }
                }
                &[selected_source_type="GoogleDrive"] {
                  .sourceOption[source_type="GoogleDrive"]{
                    background-color: #EEE;
                    color: black;
                    cursor: default;
                  }
                  .tableHeader:before{ content: "Cloud-File"; }
                  > .sheetInfo .fileType_wrapper{ display: inline-block; }
                }
                &[selected_source_type="LocalFile"] {
                  .sourceOption[source_type="LocalFile"]{
                    background-color: #EEE;
                    color: black;
                    cursor: default;
                  }
                  .gdocLink{ display: none; }
                  .fileLink{ display: inline-block; }
                  .tableHeader:before{ content: "File"; }
                  > .sheetInfo {
                    .fileType_wrapper{ display: inline-block; }
                    > .sheet_wrapper > .tableHeader{ display: none; }
                    > .sheetName_wrapper{ display: none; }
                  }
                }

                > .sheetInfo{
                  border: solid 1px lightgray;
                  border-radius: 5px;
                  text-align: left;
                  width: 300px;
                  margin: 0 auto;
                  padding-bottom: 5px;
                  .tableHeader{
                    font-weight: 700;
                    text-align: center;
                    border-bottom: solid 1px lightgray;
                    margin-bottom: 2px;
                    margin-top: 5px;
                  }
                  > .sheet_wrapper{ margin: 0 auto; }
                  .subheading{
                    width: 110px;
                    display: inline-block;
                    text-align: right;
                    cursor: default;
                    &:not(.tableHeader){ font-weight: 300; }
                  }
                  .sheetColumn_Splitter{ width: 60px; }
                  .tableName{ width: 85px; }
                  .sheetColumn_Seperator{ width: 30px; }
                  .fileType_wrapper{ display: none; }
                  .sheetColumn_sep_wrapper{
                    display: none;
                    font-size: 0.8em;
                    margin-left: 5px;
                    cursor: default;
                  }
                }

                >.actionButton{
                  display: inline-block;
                  border: solid 1px gray;
                  padding: 5px;
                  margin: 5px;
                  border-radius: 5px;
                  background-color: white;
                  font-weight: 300;
                  &[disabled=true]{
                    //pointer-events: none;
                    color: gray;
                    border-color: lightgray;
                    cursor: not-allowed;
                  }
                  &[disabled=false]:hover{
                    cursor: pointer;
                    box-shadow: 1px 1px 1px gray;
                    background-color: #EEE;
                  }
                }
            }

            > .overlay_loading{
                width: 300px;
                height: 40px;
                position: absolute;
                top: 0; left: 0; bottom: 0; right: 0;
                // http://tobiasahlin.com/spinkit/
                .spinner{
                    position: absolute;
                    left: 20px;
                    top: 3px;
                    font-size: 10px;
                    width: 50px;
                    height: 30px;
                    text-align: center;
                    font-size: 10px;
                    > .spinner_x {
                        margin-right: 2px;
                        background-color: rgb(163, 189, 209);
                        height: 100%;
                        width: 6px;
                        display: inline-block;

                        .animation(stretchdelay 1.2s infinite ease-in-out);
                    }
                    > .spinner_2 {
                        .animation-delay(-1.1s);
                    }
                    > .spinner_3 {
                        .animation-delay(-1.0s);
                    }
                    > .spinner_4 {
                        .animation-delay(-0.9s);
                    }
                    > .spinner_5 {
                        .animation-delay(-0.8s);
                    }
                }
                div.status_text{
                    margin: auto;
                    position: absolute;
                    top: 10px;
                    left: 70px;
                    height:20px;
                    > .status_text_sub{
                        margin-left:5px;
                    }
                }
            }
            > .overlay_infobox{
              display:none;
              width: 390px;
              height: 200px;
              position: absolute;
              top: 0; left: 0; bottom: 0; right: 0;
              cursor: default;
              > .infobox-header{
                background-color:rgb(216, 221, 212);
                width:100%;
                padding-top: 5px;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
                border-bottom: solid 2px rgb(60, 94, 67);
              }
              .boxinbox{ 
                margin-top: 10px;
                font-size: 0.9em;
                a.myName{
                  display: inline-block;
                  font-size: 1.1em;
                  margin: 5px 10px;
                  color: black;
                  font-weight: 600;
                  font-style: normal;
                }
                a.advName{
                  color: black;
                }
              }
              .libName{
                font-size: 1.3em;
                font-weight: 700;
                color: black;
                text-decoration: none;
                &:hover{ color: orangered; }
              }
              .project_fund {
                clear: both;
                margin-top: 1em;
                text-align: center;
                font-size: 0.8em;
                font-weight: 300;
                white-space: nowrap;
              }
            }
            > .overlay_recordDetails{
              position: relative;
              margin: 20px;
              padding: 10px 30px;
            }
            &[show="none"]{
              pointer-events: none;
              > .background{ opacity: 0; }
            }
            &[show="loading"]   > .overlay_loading{ display: inline-block; }
            &[show="infobox"]   > .overlay_infobox{ display: inline-block; }
            &[show="source"]    > .overlay_source { display: inline-block; }
            &[show="help"]      > .overlay_help   { .display(flex); }
            &[show="answer"] {
              > .overlay_help    { .display(flex); }
              > .overlay_answer  { 
                .display(flex);
                pointer-events: none;
              }
              > .background{ opacity: 0; }
            }
            &[show="recordDetails"]{
              > .overlay_recordDetails{
                .animation(recordDetails 500ms forwards);
                .animation-iteration-count(1);
                .animation-timing-function(ease-in-out);
                display: inline-block;
              }
            }
        } // panel_overlay
    }

    .hasLabelWidth{ text-align: right; }
    .catBlock:not([selected="0"]) {
      .categoryLabel{ .background-image(~"linear-gradient(left, rgba(220,220,220,0) 0%, rgba(220,220,220,1) 20px)"); }
      .item_count_wrapper{ .background-image(~"linear-gradient(left, rgba(220,220,220,1) 0%, rgba(220,220,220,0) 100%)"); }
    }

    .summaryCategorical{
      .scrollToTop{ right: 1px; }
    }

    .clearFilterButton{
      width: 14px;
      height: 100%;

      display: inline-block;
      cursor: pointer;

      font-weight: 700;
      font-size: 11px;

      text-align: center;

      .transition(~"background-color 100ms linear,color 100ms linear, opacity 400ms");

      background-color: #635d46;
      color: #eeebe0;
      border: solid 1px #635d46;

      &:hover{
        background-color: #B6AF96;
        color: #635d46;
      }

      &.inSummary{
        display: none;
        vertical-align: top;
        pointer-events: all;
        box-shadow: 0px 0px 1px #474940;
        margin-top: 1px;
        font-size: 0.8em;
        > .fa-times{
          top: -1px;
          position: relative;
        }
      }
      &.allFilter{
        display: inline-block;
        vertical-align: top;
        border-width: 0px 0px 0px 1px;
        line-height: 16px;
      }
    }

    .measurePercentControl{
      pointer-events: all;
      position: absolute;
      color: black;
      font-size: 0.7em;
      font-weight: 700;
      cursor: pointer;
      line-height: 1em;
      padding: 0px 2px;
      border: solid 1px rgba(153, 171, 146, 0);
      border-radius: 5px;
      background-color: rgba(211, 217, 197, 0); 
      .transition(background-color 250ms linear, border-color 250ms linear);
      // Changed when percentView is on
      &:after{ content: '#'; }
      &[highlight="true"]{
        color: orangered;
        background-color: rgba(211, 217, 197, 1);
        border: solid 1px rgba(153, 171, 146, 1);
        &:after{ content: '%'; }
      }
    }

    .chartAxis_Measure {
      pointer-events: none;
      position:absolute;
      z-index: 2;
      top: 0px;
      > .tickGroup > .tick{
        opacity: 0;
        position:absolute;
        > .text{
          position: relative;
          text-align: center;
          font-size: 0.6em;
          font-weight: 300;
          line-height: 9px;
          cursor: default;
          color: gray;
          &.measureAxis_1{ display: block; }
        }
        > .line{
          display: block;
          position: absolute;
        }
      }
    }
    .scaleModeControl{
      position: absolute;
      left: 0px;
      top: 0px;
      cursor: pointer;
      pointer-events: all;
      background-color: #E0E4D7;
      border: solid 1px #B7CAAF;
      border-radius: 5px;
      opacity: 0;
      .transition(opacity 250ms linear);
    }

    .leaflet-tile-pane{
      .transition(opacity 250ms linear);
      &[showhide=hide]{ opacity: 0.2; }
    }

    .dragWidthHandle{
      display: none;
      position: absolute;
      top: 0px;
      cursor: col-resize;
      border-left: dotted lightgray 2px;
      width: 4px;
      &:hover{ border-color: gray; }
      &[dragging]{
        display: block;
        border-color: lightgray;
        border-style: solid;
        border-left-width: 2px;
        border-right: none;
        border-top: none;
        border-bottom: none;
      }
    }

    .summaryConfigControl{
      display: none;
      color: gray;
    }

    .headerGroup{
      position: relative;
      text-align: center;
      margin: 1px 0px;
      border-radius: 3px;
      box-shadow: 0px 0px 2px rgb(155, 155, 155);
//        .background-image(~"linear-gradient(right, rgba(190, 190, 190, 0) 0%, rgba(190, 190, 190, 0.3) 10%, rgba(190, 190, 190, 0.3) 90%, rgba(190, 190, 190, 0) 100%);");
//        .background-image(~"linear-gradient(right, rgba(190, 190, 190, 0.3) 0%, rgba(190, 190, 190, 0.4) 20%, rgba(190, 190, 190, 0.4) 80%, rgba(190, 190, 190, 0.3) 100%);");
      background-color: rgb(235, 235, 235);
      .summaryName {
        display: block;
        font-weight: 700;
        cursor: default;
        //font-variant: small-caps;
        padding-top: 2px;
        text-rendering: initial;
        white-space: nowrap;
        text-align: center;
        margin: 0 auto;
        height: 20px;
        //min-height: 18px;
        /*white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;*/
        > .summaryName_text{
          display: inline-block;
          max-width: calc(~"100% - 60px");
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          font-size: 0.9em;
          padding: 0px 3px;
          cursor: default;
          &:focus{
            background-color: white;
            box-shadow: 0 0 3px #2CABCF;
            outline: 0 none;
            padding-left: 3px;
            padding-right: 3px;
          }
        }
      }
      .save_filter_as_set{
        display: none;
        position: absolute;
        cursor: pointer;
        margin-left: 4px;
        margin-top: 1px;
        width: 15px;
        color: gray;
        &:hover{ color: black; }
      }
      .clearFilterButton.rowFilter{
        pointer-events: all;
        height: 14px;
        width: 14px;
        line-height: 13px;
        margin-right: 3px;
      }
      .summaryIcons{
        top: 3px;
        right: 2px;
        position: absolute;
        font-size: 0.9em;
        > .fa{
          color: gray;
          cursor: pointer;
          margin-left: 2px;
          vertical-align: top;
          &:hover{ color: orangered; }
        }
        > .summaryDescription{
          display: none;
          cursor: default;
        }
        > .summaryViewAs{
          display: none;
          cursor: pointer;
          width: 15px;
          text-align: center;
          &[viewAs="map"]:before{ content: "\f0ca"; } // globe
          &[viewAs="map"]:hover:before{ content: "\f0ac"; } // list-ul
          &[viewAs="list"]:before{ content: "\f0ac"; } // list-ul
          &[viewAs="list"]:hover:before{ content: "\f0ca"; } // globe
        }
        > .useForRecordDisplay{ display: none; }
        > .setMatrixButton{ display: none; }
      }
      > .header_display_control{
        display: block;
        position: absolute;
        font-size: 0.9em;
        top: 3px;
        left: 2px;
        .transition(~'color 250ms linear, opacity 100ms linear ');
        .transform-origin(50% 50%);
        > .fa{
          display: inline-block;
          vertical-align: top;
          opacity: 0;
          color: black;
          cursor: pointer;
          margin-right: 2px;
          width: 14px;
          height: 14px;
          width: 13px;
          height: 13px;
          .transition(~'color 250ms linear, opacity 100ms linear ');
          &:hover{ color: orangered; }
        }
        > .buttonSummaryCollapse::before{ content: "\f066"; }
        > .buttonSummaryRemove{ display: none; }
        > .buttonSummaryExpand{ display: none; }
      }
    } // headerGroup

    .lockButton{
      position: absolute;
      .transition(~'opacity 500ms linear');
      opacity: 0;
      pointer-events: none;
      cursor: pointer;
      color: gray;
      font-size: 0.9em;
      z-index: 21;
      &:after{ content: "\f13e"; } // Lock
      &:hover:after{ content: "\f023"; } // Unlock
      &[inside]{ // Appears inside the visual glyph
        color: white;
        text-shadow: 0px 0px 1px rgb(0, 0, 0);
      }
    }

    .aggrGlyph{
      display: block;
      position: absolute;
      .transition(~'all 700ms ease-in-out');

      > [class^="measure_"]{
        display: block;
        position: absolute;
      }

      > .total_tip{ pointer-events: none; }

      > span{
        &[class^="measure_"]{
          .transform-origin(0% 0%);
          .transition(@bar_animation);
          pointer-events: none;
        }
        &[class^="measure_Active"]{
          background-color: @color_bars;
          cursor: pointer;
          pointer-events: all;
        }
        &[class^="measure_Total"]{
          background-color: @color_distr_total;
        }
        &[class^="measure_Highlight"]{
          background-color: @color_bar_preview;
          .transition(~'transform 250ms ease-in-out');
        }
        &[class^="measure_Compare"]{
          .transition(~'transform 500ms ease-in-out, opacity 300ms ease-in-out');
          opacity: 0;
        }
        &[class^="measure_Compare_A"]{ background-color: @color_Compare_A; }
        &[class^="measure_Compare_B"]{ background-color: @color_Compare_B; }
        &[class^="measure_Compare_C"]{ background-color: @color_Compare_C; }
      }

      &.totalGlyph{ // Breadcrumb
        position: absolute;
        height: 7px;
        bottom: 0px;
        left: 0px;
        width: 100%;
        > [class^="measure_"]{
          left: 0px;
          top: 0px;
          width: 1px;
          height: 1px;
          pointer-events: none;
        }
        > [class^="measure_Highlight"]{ transform: inherit; }
        > [class^="measure_Compare"]{ height: 1px; }
      }

      &.catGlyph{
        top: 0px;
        > [class^="measure_"]{
          top: 4px;
          width: 1px;
          .calc(height, ~"100% - 8px");
        }
        > [class^="measure_Active"]{ pointer-events: none; }
        > [class^="measure_Compare"]{ height: 1px; }
        > [class^="measure_Highlight"]{ height: 1px; }
        > .clickArea > .lockButton{
          display: block;
          .calc(top, ~"50% - 5px");
          right: 1px;
        }

        > .total_tip{
          /* right arrow */
          border-top: 5px solid transparent;
          border-bottom: 5px solid transparent;
          border-left: 5px solid @color_distr_total;
          background-color: initial;
          top: 4px;
          position: absolute;
          display: inline-block;
          // The sawtooth pattern
/*          background: linear-gradient(-135deg, transparent 75%, @color_distr_total 75%) 0 50%,
          linear-gradient(-45deg, transparent 75%, @color_distr_total 75%) 0 50%;
          background-position: top left, top left;
          background-repeat: repeat;
          background-size: 8px 8px; */
        }
      } // .catGlyph

      &.setPairGlyph{
        > .setPairBackground{
          opacity: 0;
          fill: @color_setPair_background;
          .transition(~'opacity 500ms linear');
        }
        > [class^="measure_"]{
          cursor: pointer;
          .transition(~'all 500ms linear');
        }
        > .measure_Active { fill: @color_bars; }
        > .measure_Highlight{ fill: @color_bar_preview; }
        > .measure_Compare_A{ stroke: @color_Compare_A; }
        > .measure_Compare_B{ stroke: @color_Compare_B; }
        > .measure_Compare_C{ stroke: @color_Compare_C; }
        > [class^="measure_Compare"]{ 
          fill: none;
          stroke-width: 1px;
          opacity: 0;
        }
        &[activesize="0"]{ display: none; }
        &:not([activesize="0"]) > .setPairBackground{ opacity: 1; }
      } // .setPairGlyph

      // Part of interval summary
      &.rangeGlyph{
        height: 100%;
        pointer-events: none;
        > [class^="measure_"]{
          .transform-origin(0% 100%);
          width: 1px;
          height: 1px;
        }
        > .total_tip{
          content: " ";
          display: block;
          position: absolute;
          top: -7px;
          width: 100%;
          left: 0px;
          height: 8px;
          opacity: 0;

          background: linear-gradient(-135deg, transparent 75%, @color_distr_total 75%) 0 50%,
          linear-gradient(135deg, transparent 75%, @color_distr_total 75%) 0 50%;
          background-position: top left, top left;
          background-repeat: repeat;
          background-size: 8px 8px;
        }
        > .lockButton{
          // width: 100%;
          text-align: center;
          width: 16px;
          left: calc(~"50% - 8px");
          font-size: 0.8em;
          &[inside]{ margin-top: 12px; }
        }
        > .measureLabel{
          position: relative;
          display: block;
          top: 1px;
          width: 100%;
          text-align: center;
          cursor: pointer;
          pointer-events: all;
          .transition(~'transform 700ms ease-in-out');
        }
      } // .rangeGlyph

      > .measureLabel{ 
        color: @color_item_count;
        font-size: 0.7em;
        > .unitName{ margin-left: 0px; } // no need extra spacing.
      }
      &[showlock="true"] .lockButton{
        pointer-events: all !important;
        opacity: 1;
      }
      &[compare="true"] .lockButton{
        pointer-events: all !important;
        opacity: 1;
        &:not([inside]){ color: @color_Compare_A; }
        &:after{ content: "\f023"; } // Unlock
        &:hover:after{ content: "\f13e"; } // Lock
      }

      &.mapGlyph{
        > .measure_Active{
          opacity: 0.8;
          stroke-width: 1px;
          .transition(~'opacity 500ms linear');
        };
        > .aggr{
          //stroke: rgba(255, 255, 255, 0.5);
          &.preview{
            .transition(~'opacity 500ms ease-in-out');
            stroke-width: 1px;
            opacity: 0;
          }
        }
        >.measureLabel{
          color: black;
          fill: black;
          font-weight: 500;
          text-shadow: 0 0 1px #FFFFFF, 0 0 1px #FFFFEF, 0 0 1px #FFFFFF, 0 0 1px #FFFFFF, 0 0 8px #FFFFFF;
          text-rendering: geometricPrecision;
          text-anchor: middle;
          alignment-baseline: middle;
          paint-order: stroke;
          stroke: white;
          stroke-width: 2px;
          stroke-linecap: butt;
          stroke-linejoin: miter;
          pointer-events: none;
        }
        &[selection="selected"] {
          > .measure_Active{
            cursor: pointer;
            stroke-width: 2px;
            stroke: orangered;
            fill: lighten(orangered, 30%);
            //.transition(~'fill 200ms ease-in-out');
          }
          > .aggr.preview{ display: none; }
        }
        &[selection="onRecord"] {
          > .aggr.active{
            .transition(~'fill 200ms ease-in-out');
            stroke: darken(@color_onRecord_back, 80%);
            stroke-width: 2px;
            fill: darken(@color_onRecord_back, 40%);
          }
        }
      }

    } // aggrGlyph


    .kshfRecord{
      opacity: 1;
      cursor: default;
      overflow: hidden;
      vertical-align: top;
      padding: 1px;
      position: relative;
      .transition(~"opacity 500ms ease, background-color 100ms linear");

      > .content{
        vertical-align: top;
        border: solid 0px lightgray;
        position: relative;

        > .iteminfo{
          float:none;
          clear: left;
          font-weight:normal;
          margin-bottom: 2px;
        }
        > .iteminfo_0{
          font-size:1.0em;
          color: black;
        }
        > .iteminfo_1{
          font-size:0.9em;
          color: #555555;
        }
        > .iteminfo_2{
          font-size:0.8em;
          color: #555555;
          font-style:italic;
          font-weight:300;
        }
        > .iteminfo_3{
          font-size:0.8em;
          color: rgb(167, 31, 31);
          font-style:italic;
          font-weight:300;
        }
      }
    } // .kshfRecord

    // List / Grid Views
    div.kshfRecord{
      vertical-align: top;

      > .recordRank{
        font-size: 0.6em;
        color: gray;
        font-weight: 300;
        font-style: italic;
        text-align: right;
      }
      > .recordToggleDetail{ // .kshfRecord's
        display: none;
        vertical-align: top;
        width:18px; // includes the padding, using box model...
        cursor: pointer;
        font-weight: 700;
        > .item_details_toggle{
          .transition(~'transform 500ms');
          color: gray;
          position: relative;
          &:hover{ color:black; }
        }
      }
      &[details="true"]{
        max-height: none;
        .item_details_toggle{
          display: inline-block;
          .rotate(180deg);
        }
        .item_details{ display:block; }
      }
      &[details="false"]{
        .item_details_toggle{ display: inline-block; }
        .item_details{ display: none; }
      }

      &[selection^="onRecord"]  { 
        padding: 0px;
        background-color: @color_onRecord_back !important;
        border: solid 1px darken(@color_onRecord_back,40%) !important;
      }
      &[selection="highlighted"]{ 
        padding: 0px;
        background-color: lighten(@color_bar_preview, 35%);
        border: solid 1px darken(@color_bar_preview,0%) !important;
      }
      &[rec_compared]{ padding: 0px; }
      &[rec_compared^="A"]{
        background-color: lighten(@color_Compare_A, 55%);
        border: solid 1px @color_Compare_A !important;
        &[selection="highlighted"]{
          .background-image( linear-gradient(to right, 
            lighten(@color_Compare_A, 55%) 0%, lighten(@color_Compare_A, 55%) 20%, 
            lighten(@color_bar_preview, 35%) 80%, lighten(@color_bar_preview, 35%) 100%) );
        }
      }
      &[rec_compared^="B"]{
        background-color: lighten(@color_Compare_B, 30%);
        border: solid 1px darken(@color_Compare_B,10%) !important;
        &[selection="highlighted"]{
          .background-image( linear-gradient(to right, 
            lighten(@color_Compare_B, 30%) 0%, lighten(@color_Compare_B, 30%) 20%, 
            lighten(@color_bar_preview, 35%) 80%, lighten(@color_bar_preview, 35%) 100%) );
        }
      }
      &[rec_compared^="C"]{
        background-color: darken(@color_Compare_C, 10%);
        border: solid 1px darken(@color_Compare_C,40%) !important;
        &[selection="highlighted"]{
          .background-image( linear-gradient(to right, 
            darken(@color_Compare_C, 10%) 0%, darken(@color_Compare_C, 10%) 20%, 
            lighten(@color_bar_preview, 35%) 80%, lighten(@color_bar_preview, 35%) 100%) );
        }
      }
    } // div.kshfRecord

    .summaryConfig{
      position: absolute;
      display: block;
      top: -0px;
      opacity: 0;
      .transition(all 400ms ease-in-out);
      pointer-events: none;
      background-color: rgba(235, 235, 235, 0.9);
      border-radius: 0px 0px 10px 10px;
      box-shadow: 0px 0px 1px black;
      padding: 1px 5px;
      width: 100%;
      z-index: 100;
      right: 0%;
      font-size: 0.8em;
      box-shadow: 0px 2px 2px #9b9b9b;
      > .summaryConfig_Option{
        font-weight: 300;
        text-align: center;
        margin-bottom: 1px;
      }
      .configOption{
        //background-color: white;
        cursor: pointer;
        border: solid 1px #AFAFAF;
        padding: 0px 3px;
        margin-left: -1px;
        font-size: 0.8em;
        top: -1px;
        &:hover{ color: orangered; }
        &[active=true]{ background-color: white; pointer-events: none; font-weight: 500; }
        &:first-child{ border-radius: 5px 0px 0px 5px; }
        &:last-child{ border-radius: 0px 5px 5px 0px; }
        > *[class^="bl_"]{
          display: inline-block;
          width: 4px;
          height: 7px;
        }
        > .bl_Active    { background-color: @color_bars; }
        > .bl_Highlight { background-color: @color_bar_preview; }
        > .bl_Compare_A { background-color: @color_Compare_A; }
        > .bl_Compare_B { background-color: @color_Compare_B; }
        > .bl_Compare_C { background-color: darken(@color_Compare_C, 40%); }
      }
    }
    .summaryConfig_UnitName{
      > .unitNameInput{
        height: 14px;
        background-color: white;
        border: solid 1px #AFAFAF;
        cursor: text;
        width: 22px;
        font-size: 0.8em;
        font-weight: 300;
        margin: 0px;
        padding: 0px 2px;
        vertical-align: top;
        &:focus{
          outline-color: #cb5454;
          outline-width: 2px;
        }
        &:hover{ border-color: #cb5454; }
      }
    }

    // ***********************************************************************************************************
    // PERCENTILE CHART STYLES

    .percentileGroup{
      .display(flex);
      .flex-direction(column);
      position: relative;
      // height: 16px; Depends on UI state
      border-style: solid;
      border-color: lightgray;
      border-width: 1px 0px;
      > .percentileTitle{
        font-size: 0.6em;
        position: absolute;
        display: inline-block;
        font-weight: 300;
        top: 0px;
        right: -10px;
        text-shadow: 0px 0px 2px white;
        z-index: 120;
        color: gray;
        pointer-events: none;
        display: none;
      }
      // Fixed height for active selection: So it covers the whole chart. Compare selections will be on top.
      &[percentilechartvisible="Basic"] > .percentileChart_Active > .quantile{ height: 11px; }
      &[percentilechartvisible="Extended"] > .percentileChart_Active > .quantile{ height: 28px; }
      &:hover > .percentileTitle{ display: block; }
    } // percentileGroup

    *[class^="percentileChart"]{
      .flex(1);
      position: relative;
      opacity: 0;
      .transition(~'opacity 500ms linear');
      > .quantile {
        box-sizing: content-box;
        display: inline-block;
        position: absolute;
        height: 100%;
        left: 0px;
        width: 1px;
        top: -1px;
        margin: 1px 0px;
        .transition(~'transform 700ms ease-in-out');
        .transform-origin(0% 0%);
        cursor: pointer;
        &.q_pos{
          margin-left: -0.5px;
          pointer-events: none;
          background-color: rgba(0,0,0,0.4);
          &.q_50 {
            width: 2px;
            margin-left: -1px;
            pointer-events: all;
            background-color: rgb(10,10,10);
          }
        }
        &.q_range{
          &:hover{
            border-style: solid;
            border-width: 1px 0px 1px 0px;
            border-color: darken(@color_bars, 20%);
            top: -2px;
            // make the size 1px larger on top and bottom, display the border.
            //height: calc(~"100% + 2px");
          }
        }
      }
    }
    .percentileChart_Active{ 
      opacity: 1;
      > .quantile{
        &.q_40_60 { background-color: darken(@color_bars, 10%); }
        &.q_30_70 { background-color: lighten(@color_bars, 0%); }
        &.q_20_80 { background-color: lighten(@color_bars, 7%); }
        &.q_10_90 { background-color: lighten(@color_bars, 15%); }
      }
    }
    .percentileChart_Highlight{ 
      border-top: solid 1px lightgray;
      background-color: white;
      pointer-events: none;
      > .quantile{
        &.q_40_60 { background-color: lighten(@color_bar_preview, 0%); }
        &.q_30_70 { background-color: lighten(@color_bar_preview, 10%); }
        &.q_20_80 { background-color: lighten(@color_bar_preview, 20%); }
        &.q_10_90 { background-color: lighten(@color_bar_preview, 30%); }
      }
    }
    *[class^="percentileChart_Compare"]{ 
      display: none;
      pointer-events: all; // mouse-over can be applied...
      background-color: white;
      border-top: solid 1px #EEEEEE;
    }
    .percentileChart_Compare_A > .quantile{
      &.q_40_60 { background-color: lighten(@color_Compare_A, 20%); }
      &.q_30_70 { background-color: lighten(@color_Compare_A, 30%); }
      &.q_20_80 { background-color: lighten(@color_Compare_A, 40%); }
      &.q_10_90 { background-color: lighten(@color_Compare_A, 50%); }
    }
    .percentileChart_Compare_B > .quantile{
      &.q_40_60 { background-color: darken(@color_Compare_B, 10%); }
      &.q_30_70 { background-color: darken(@color_Compare_B, 2%); }
      &.q_20_80 { background-color: lighten(@color_Compare_B, 12%); }
      &.q_10_90 { background-color: lighten(@color_Compare_B, 25%); }
    }
    .percentileChart_Compare_C > .quantile{
      &.q_40_60 { background-color: darken(@color_Compare_C, 65%); }
      &.q_30_70 { background-color: darken(@color_Compare_C, 57%); }
      &.q_20_80 { background-color: darken(@color_Compare_C, 50%); }
      &.q_10_90 { background-color: darken(@color_Compare_C, 40%); }
    }

    // PERCENTILE CHART STYLES - END
    // ***********************************************************************************************************


    .missingValueAggr{
      display: none;
      position: absolute;
      left: 0px;
      bottom: 2px;
      padding: 1px;
      font-size: 0.8em;
      color: lightgray;
      .transition(~'color 100ms linear');
      cursor: pointer;
      z-index: 10;
      &[filtered]{ 
        color: black !important;
        border: solid 1px darken(lightgray,20%);
        border-radius: 4px;
        padding: 0px;
        background-color: lightgray;
      }
      &[selection="onRecord"]{ 
        color: black !important;
        border: solid 1px darken(@color_onRecord_back,20%);
        border-radius: 4px;
        padding: 0px;
        background-color: @color_onRecord_back;
      }
    }

    .measureAxis_2{ display: none; }

    .kshfSummary{
        display: block;
        position: relative;
        .transition(max-height 700ms ease-in-out);

        > .wrapper{
            position: relative;
            overflow: hidden;
            .transition(height 700ms ease-in-out);
            // so that absolute positioned elements will not overflow

            &[showMeasureAxis_2] .measureAxis_2 { display: block; }

            > .summaryCategorical{
                overflow: hidden;
                > .summaryControls{
                  border-bottom: solid 1px #E9E9E9;
                  margin-top: -1px;
                  position: relative;
                  display: none;
                  > .catTextSearch{
                    display: none;
                    vertical-align: top;
                    > .textSearchInput {
                      display: inline-block;
                      width: calc(~"100% - 13px");
                      height: 15px;
                      text-align: right;
                      &::-webkit-input-placeholder { text-align: right; }
                    }
                  } // catTextSearch

                  > .catSortButton{
                    opacity: 0;
                    position: absolute;
                    bottom: 1px;
                    font-size: 0.7em;
                    text-align: right;
                    padding-right: 2px;
                    .transition(~'opacity 200ms linear');
                    &:hover{ color:orangered }
                    &:before{ content: "\f161"; }
                    &[inverse='true']:before{ content: "\f160" !important; }
                    &[resort="true"]:before{ content: "\f175" !important; }
                  }

                  > .sortOptionSelectGroup{
                    display: block;
                    vertical-align: top;
                    white-space:nowrap;
                    position: relative;
                    font-weight: 300;
                    > .optionSelect{
                      width: 100%;
                      height: 17px;
                      font-size: 0.7em;
                      -webkit-appearance: none;
                      -moz-appearance: none;
                      background: transparent;
                      appearance: none;
                      font-weight: 300;
                      border-width: 0px;
                      cursor: pointer;
                      padding-right: 0px;
                      margin: 0px;
                      vertical-align: middle;
//                            background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10px' height='15px'><polyline points='0,2 10,2, 5,11'/></svg>") no-repeat top right;
                      &:hover{ color: orangered; }
                    }
                  }
                } // summaryControls

                .scrollToTop{
                  margin-top: -14px;
                  font-size: 0.8em;
                  pointer-events: all;
                  position: absolute;
                }
                .selectAllAttribsButton{
                  font-size: 0.6em;
                  float: left;
                  margin-left: 2px;
                  font-weight: 300;
                  color: black;
                  border: solid 1px lightgray;
                  border-radius: 10px;
                  padding: 1px 5px 0px 5px;
                  background-color: rgba(150,150,100,0.2);
                  cursor: pointer;
                  &:hover{ box-shadow: 0px 0px 1px black; }
                  &::before{ content: '+ Add Filter with All'; }
                }
                .scroll_display_more{
                  font-size: 0.7em;
                  line-height: 1.4em;
                  position: absolute;
                  left: 0px;
                  vertical-align: top;
                  padding-right: 5px;
                  cursor: pointer;
                  color: rgb(180, 180, 180);
                  opacity:1;
                  pointer-events: all;
                  display: inline-block;
                  &:hover{ color: #cb5454; }
                }

                > .aggrGroup{
                  position: relative;
                  overflow-y: auto;
                  overflow-x: hidden;
                  display: block;
                  z-index: 5;
                  .transition(~'height 700ms ease-in-out');

                  > .chartBackground{
                    width: 1px;
                    display: block;
                    position: relative; // so label resize gets its full height.
                    .transition(~'opacity 250ms');
                    > .chartCatLabelResize{
                      display: none;
                      height: 100%;
                      z-index: 25;
                    }
                  }

                  > .catGlyph{
                    white-space: nowrap;
                    width: 100%;
                    > .clickArea{
                      position: absolute;
                      left: 0px;
                      display: inline-block;
                      vertical-align: top;
                      pointer-events: all;
                      // Note: The height of clickable area is the same as height of the bar!
                      margin-top:4px;
                      margin-bottom:4px;
                      .calc(height, ~"100% - 8px");
                      position: absolute;
                      font-size: 0.8em;
                      font-weight: 300;
                      width: 1px;
                      left: 0px;
                    }
                    > .categoryLabel{
                      position: absolute;
                      display: inline-block;
                      vertical-align: top;
                      line-height: 16px;
                      left: 0px;
                      padding-right: 2px;
                      z-index: 21;

                      font-size: 0.8em;
                      font-weight: 300;
                      cursor: default;
                      // display ... when text is too long
                      pointer-events: none;
                      white-space: nowrap;
                      text-overflow: ellipsis;
                      overflow: hidden;
                      > .theLabel{
                        // And/Or/Not can come before...
                        &:before{
                          color: white;
                          font-weight: 300;
                          font-size: 0.7em;
                          vertical-align: top;
                          border-radius: 3px;
                          padding: 1px 2px 0px 2px;
                          margin: 0px 2px;
                          opacity: 0.4;
                        }
                        .AndOrNot{ display: inline; }
                      }
                    }
                    > .measureLabel{
                      position: absolute;
                      display: inline-block;
                      height: 16px;
                      padding-right: 1px;
                      .calc(top, ~"50% - 8px");

                      vertical-align: top;
                      text-align: right;
                      line-height: 18px;
                      pointer-events: none;
                    }

                    .filterButtons{
                      white-space: nowrap;
                      cursor: pointer;
                      vertical-align: top;
                      //float: left;
                      z-index: 100;
                      pointer-events: all;
                      > .filterButton{
                        display: none;
                        pointer-events: all;
                        margin-right: 2px;
                        border-radius: 4px;
                        vertical-align: middle;
                        padding: 1px 2px 0px 3px;
                        line-height: 13px;
                        color: white;
                        font-weight: 300;
                        font-size: 0.7em;
                        opacity: 0;
                        .transition(~'opacity 500ms linear');
                      }
                      > .orButton {
                        background-color: lighten(@color_query_or, 10%);
                        &:hover { background-color: @color_query_or; }
                      }
                      > .notButton {
                        background-color: rgb(166, 166, 166);
                        &:hover { background-color: gray; }
                      }
                    }

                    &[activeItems='0'] .measureLabel{ visibility: hidden; }

                    &[compare="true"] {
                      > .categoryLabel > .theLabel{ font-weight: 700; }
                    }

                    &:not([selected="0"]) {
                      > .categoryLabel > .theLabel{ font-weight: 700; }
                      .clickArea{ cursor: pointer; }
                    }
                    // AND
                    &[selected="1"]{
                      > .categoryLabel {
                        background-color: #DEE2E5;
                        > .theLabel{ color: @color_query_and; }
                      }
                    }
                    // OR
                    &[selected="2"]{
                      > .categoryLabel {
                        background-color: #D8ECEE;
                        > .theLabel{ color: @color_query_or; }
                      }
                      &[show-box=true]{
                        > .categoryLabel > .filterButtons > .orButton { display: inline; opacity: 1; }
                      }
                    }
                    // NOT
                    &[selected="-1"]{
                      background-color: #E5E5E5;
                      background-color: #D8ECEE;
                      > .categoryLabel > .theLabel{ 
                        color: @color_query_not;
                        text-decoration: line-through;
                      }
                      > .categoryLabel > .filterButtons > .notButton{
                        display: inline;
                        opacity: 1;
                        background-color: @color_query_not;
                      }
                    }

                    &[selection^="selected"] {
                      > .categoryLabel > .theLabel{ font-weight: 700 !important; }
                      // Not selected
                      &[selected="0"] {
                        .clickArea { cursor: pointer; }
                        &[selecttype="and"] > .categoryLabel > .theLabel{ color: @color_query_and; }
                        &[selecttype="or" ] > .categoryLabel > .theLabel{ color: @color_query_or;  }
                        &[selecttype="not"] > .categoryLabel > .theLabel{ color: @color_query_not; text-decoration: line-through; }
                      }
                    }
                    &[selection="onRecord"] > .categoryLabel {
                      //color: @color_onRecord;
                      font-weight: 700;
                      background-color: @color_onRecord_back;
                    }
                  } // .catGlyph
                } // .aggrGroup

                &:hover {
                  > .summaryControls > .catSortButton{ opacity: 1; }
                }

                .catMap_SVG{
                  position: relative;
                  left: 0px;
                  top: 0px;
                  overflow: visible;
                }
                .catMap_Base{
                  .leaflet-control > a{
                    width: 20px;
                    height: 20px;
                    line-height: 20px;
                  }
                }
            }// summaryCategorical

            > .summaryInterval{
              padding-top: 7px;
              padding-right: 11px; // TODO: Set by JS
              // padding-left: 6px; // Set by JS
                overflow: hidden;
                &[scaletype="time"]{
                  span[class^="measure_"]{ opacity: 0 !important; }
                }
                &[scaletype="step"]{
                  .zoomControl[sign="plus"]{ display: none !important; }
                }
                &[zoomed="true"]{
                  .zoomControl[sign="minus"]{ display: block !important; }
                }
                > .histogram{
                    position:relative;
                    pointer-events: all;
//                    overflow-x: hidden;
//                    overflow-y: visible;
                    .transition(~'height 700ms ease-in-out');
                    > .timeSVG{
                      .transition(~'opacity 500ms linear');
                      //overflow: visible;
                      > [class^="measure_Highlight_"]{ opacity: 0; }
                      > [class^="measure_Compare_"]{ opacity: 0; }
                      > .measure_Active_Line    { stroke: @color_bars; }
                      > .measure_Highlight_Line { stroke: @color_bar_preview; }
                      > .measure_Compare_Line_A { stroke: @color_Compare_A; }
                      > .measure_Compare_Line_B { stroke: @color_Compare_B; }
                      > .measure_Compare_Line_C { stroke: @color_Compare_C; }
                      
                      > [class$="measure_"]{ stroke-width: 1.5px; }
                      > .measure_Total_Area{
                        fill: #EEF0F2;
                      }
                      > .measure_Active_Area{
                        fill: lighten(@color_bars, 10%);
                        stroke: @color_bars;
                      }
                      > .measure_Highlight_Area{
                        fill: fadeout(@color_bar_preview,70%);
                        stroke: @color_bar_preview;
                      }
                      > [class^="measure_Compare_Area_"] { stroke-width: 2px;}
                      > .measure_Compare_Area_A{ stroke: @color_Compare_A; }
                      > .measure_Compare_Area_B{ stroke: @color_Compare_B; }
                      > .measure_Compare_Area_C{ stroke: @color_Compare_C; }
                    }
                    > .aggrGroup{
                      position: absolute;
                      top: 0px;
                      // If this is set, it prevents background events from the other div layer
//                        width: 100%;
//                        height: 100%;
                      z-index: 3;
                      height: 100%;
                      width: 100%;
                      .transition(@layout_animation);
                      > .highlightRangeLimits{
                        opacity: 0;
                        width: 1px;
                        background-color: orangered;
                        position: absolute;
                        z-index: 100;
                        pointer-events: none;
                        .transition(~"opacity 200ms linear");
                      }
                    }
                    > .chartAxis_Measure{
                        top: 0px;
                        width: 100%;
                        height: 100%;
                        margin-left: -2px;
                        > .measurePercentControl{
                          bottom: -1px;
                          width: 24px;
                          left: -24px;
                          text-align: right;
                        }
                        > .scaleModeControl{
                          width: 25px;
                          height: calc(~"100% - 12px");
                          top: 0px;
                          &.measureAxis_1{ 
                            left: -25px;
                          }
                          &.measureAxis_2{ 
                            right: -25px;
                            left: auto;
                          }
                        }
                        > .highlightedMeasureValue{
                          position: absolute;
                          width: 100%;
                          height: 2px;
                          border-bottom: solid 1px lighten(@color_bar_preview,20%);
                          opacity: 0;
                          .transition(opacity 200ms linear);
                          > .highlightedAggrValuePointer{
                            left: -10px;
                          }
                        }
                        > .tickGroup > .tick{
                            width: calc(~"100% - 21px");
                            width: 100%;
                            left: 0px;
                            > .line{
                              border-bottom: dotted 1px @color_axis_line;
                              width: 100%;
                              left: 0px;
                              pointer-events: none;
                            }
                            > .text{
                              position: absolute;
                              width: 25px;
                              top: -3px;
                              &.measureAxis_1{
                                left: -25px;
                                padding-right: 2px;
                                text-align: right;
                              }
                              &.measureAxis_2{
                                right: -25px;
                                padding-left: 2px;
                                text-align: left;
                              }
                            }
                        }
                    }
                }

                > .mapColorBar{
                  .flex-direction(row);
                  .flex-wrap(wrap);
                  display: none;
                  position: relative;
                  height: 12px;
                  padding: 0px;
                  border: solid 1px lightgray;
                  > .invertColorScale{
                    font-size: 0.7em;
                    left: -13px;
                    position: absolute;
                    color: lightgray;
                    cursor: pointer;
                    &:hover{ color: black; }
                  }
                  > .mapColorBlock{
                    margin: 0px;
                    .flex(1);
                    border: solid 1px rgba(1,1,1,0);
                    cursor: pointer;
                    border: solid 0px white;
                    &:hover{ border-width: 1px; }
                  }
                }
                > .intervalSlider{
                    position:relative;
                    pointer-events: all;
                    > .zoomControl{
                      display: none;
                      position: absolute;
                      left: -15px;
                      top: 1px;
                      font-size: 0.7em;
                      color: gray;
                      cursor: pointer;
                      &:hover{ color: black; }
                      &[sign="plus"]:before{ content: "\f00e"; }// zoom-plus
                      &[sign="minus"]:before{ content: "\f010"; } // zoom-minus
                    }
                    > .controlLine {
                        height: 11px;
                        cursor: ew-resize;
                        > .recordValue{
                          position:absolute;
                          z-index: 20;
                          top: 1px;
                          display: none;
                          .transition(~'all 450ms ease-in-out');
                          > .recordValueScaleMark{
                            display: block;
                            border-radius: 2px;
                            width: 4px;
                            height: 8px;
                            background-color: darken(@color_onRecord_back,40%);
                            left: -2px;
                            z-index: 2;
                            position: relative;
                          }
                          > .recordValueText{
                            position: absolute;
                            top: 7px;
                            color: black;
                            font-size: 0.8em;
                            font-weight: 700;
                            white-space: nowrap;
                            > .recordValueText-v{
                              position: relative;
                              left: -50%;
                              background-color: @color_onRecord_back;;
                              border-radius: 4px;
                              border: solid 1px darken(@color_onRecord_back,20%);
                              padding: 0px 1px;
                              font-size: 0.9em;
                            }
                          }
                        }
                        > .base{
                          display: block;
                          position: absolute;
                          box-shadow: inset 0px 0px 2px gray;
                          .transform-origin(0% 0%);
                          &.total{
                            width: 100%;
                            height: 3px;
                            top: 3px;
                            left: 1px;
                            background-color: lightgray;
                          }
                          &.active{
                            display: none;
                            height: 8px;
                            top: 1px;
                            width:1px;
                            pointer-events: none;
                            background-color: #30B8C4;
                            .transition(~"opacity 500ms");
                            &[filtered=true]{
                              display: block;
                              pointer-events: all;
                            }
                            &:hover{ background-color: orangered !important; }
                          }
                        }
                        > .handle{
                            position:absolute;
                            width: 6px;
                            height: 8px;
                            background-color: white;
                            border-width: 1px;
                            border-color: black;
                            border-style: solid;
                            cursor: col-resize;
                            z-index: 10;
                            top:1px;
                            &:hover{ background-color: orangered !important; }
                            &.min{
                                left: -5px;
                                border-top-left-radius: 10px;
                                border-bottom-left-radius: 10px;
                                > .rangeLimitOnChart{ left: 3px; }
                            }
                            &.max{
                                border-top-right-radius: 10px;
                                border-bottom-right-radius: 10px;
                                > .rangeLimitOnChart{ left: -2px; }
                            }
                            > .rangeLimitOnChart{
                                position: absolute;
                                display: none;
                                width: 2px;
                                border-left: dotted 2px #30b8c4;
                                cursor: col-resize;
                                box-shadow: 0px 0px 2px white, 0px 0px 4px white;
                                &:hover{ border-left: solid 2px #30b8c4; }
                            }
                        }
                    }
                    > .labelGroup{
                      cursor: default;
                      position:relative;
                      > .tick{
                        position:absolute;
                        > .text{
                          top: -1px;
                          font-size: 0.7em;
                          font-weight: 300;
                          position: relative;
                          left: -50%;
                          display: block;
                          text-align: center;
                          white-space: nowrap;
                          cursor: pointer;
                          > .unitName {
                            white-space: nowrap;
                            overflow: hidden;
                            text-overflow: ellipsis;
                            max-width: 20px;
                            display: inline-block;
                            vertical-align: bottom;
                            &:hover{
                              overflow: visible;
                            }
                          }
                          > .secondLayer{ font-weight: 400; }
                        }
                        > .line{
                          position: absolute;
                          top: -10px;
                          height: 10px;
                          border-left: solid 1px rgb(160, 160, 160);
                          display: block;
                          pointer-events: none;
                        }
                      }
                    } // labelGroup
                } // intervalSlider

            } // summaryInterval
        } //

        &[collapsed=true]{
          .headerGroup {
            > .header_display_control > .fa.buttonSummaryCollapse{
              opacity: 1;
              &::before{ content: "\f065" !important; }
            }
          }
          > .headerGroup .summaryName{ cursor: pointer; }
          > .wrapper .summaryCategorical{
            > .summaryControls { display: none; }
            > .scrollToTop { display: none; }
            > .aggrGroup { display: none; }
            > .belowCatChart { display: none; }
          }
          > .wrapper .summaryInterval{
            > .histogram { display: none; }
            > .intervalSlider { display: none; }
          }
        }

        &[filtered=true] {
          > .headerGroup .clearFilterButton{ display: inline-block; }
          .rangeLimitOnChart{ display: block !important; }
          &:hover > .wrapper > .summaryInterval > .intervalSlider {
            > .zoomControl{ display: block; }
          }
        }
        &[isMultiValued=false]{
          &[filtered_or="0"][filtered_and="0"]{
            > .wrapper > .summaryCategorical > .aggrGroup > .catGlyph[selection="selected"] {
              &[selected="0"] .notButton{ display: inline; opacity: 1; }
            }
          }
          &[filtered_or="0"]{
            > .wrapper > .summaryCategorical > .aggrGroup > .catGlyph[selection="selected"] {
              &[selected="-1"] { cursor: pointer; }
            }
          }
        }
        &:not([filtered_or="0"]){
          > .wrapper > .summaryCategorical > .aggrGroup > .catGlyph[selected="0"]:hover .orButton{ display: inline; opacity: 1; }
        }
        &:not([filtered_and="0"]){
          > .wrapper > .summaryCategorical > .aggrGroup > .catGlyph[selected="0"]:hover .orButton{ display: inline; opacity: 1; }
        }
        &[isMultiValued=true]{
          > .wrapper > .summaryCategorical > .aggrGroup > .catGlyph{
            &[selected="0"][selection="selected"] .notButton{ display: inline; opacity: 1 }
          }
          .setMatrixButton{ display: inline-block !important; }
        }
        &[filtered_range=true] .clearFilterButton.rangeFilter{
          display:inline-block;
        }

/*        &:before{
            content:''; width:100%; height:100%;
            position:absolute; top:0; left:0;
            pointer-events:none;
        }*/

      &:hover{
        > .headerGroup {
          box-shadow: 0px 0px 2px #646464, 0px 0px 5px #999;
          > .header_display_control > .fa{ opacity: 1; }
        }
        .missingValueAggr{ color: gray }
      }

      &[hasMap="true"][collapsed="false"]{
        .summaryViewAs{
          display: inline-block;
        }
      }
      &[usedForSorting="true"]{
        .headerGroup .summaryIcons > .useForRecordDisplay{
          display: inline-block;
          color: black;
        }
      }
      &[viewType="map"]{
        .summaryCategorical{
          > .summaryControls > {
            .sortOptionSelectGroup{ display: none; }
            .catSortButton{ display: none !important; }
          }
          > .scrollToTop { display: none; }
          > .aggrGroup { display: none; }
          > .belowCatChart { 
            > .chartAxis_Measure{ display: none; }
            > .scroll_display_more{ display: none; }
            > .catMapColorScale{ .display(flex); }
          }
        }
      }
      &[viewType="list"]{
        .catMap_Base{ display: none; }
      }
      &[viewType="line"]{
        .summaryConfig_UnitName{ display: none;}
      }

      &[summary_type='interval']{
        &:hover .headerGroup .summaryIcons > .useForRecordDisplay{ display: inline-block; }
      }

      &[collapsed=false]{
        &[viewType='bar']:hover {
          .summaryConfigControl{ display: inline-block !important; }
        }
        &[summary_type='categorical'][viewType='list']:hover {
          .summaryConfigControl{ display: inline-block !important; }
        }
        > .headerGroup[allCatsInDisplay="false"] .buttonSummaryExpand { display: inline-block !important; }
      }
      &[showConfig=true]{
        .summaryConfig{
          top: 22px;
          opacity: 1;
          pointer-events: all;
        }
        .summaryConfigControl{ 
          display: inline-block;
          color: black;
          -webkit-animation: fa-spin 4s infinite linear;
          animation: fa-spin 4s infinite linear;
        }
      }

      &.setPairSummary{ 
        display: none;
        position: absolute;
        top: 0px;
        background-color: white;
        &[position="left"]{
          .configOpt{ right: 2px; }
          .sizeLegend{ left: 10px; }
          .belowMatrix{ text-align: right; }
          .rows > .row > .label{ text-anchor: end; }
          .setMatrixWidthAdjust{ left: 0px;}
        }
        &[position="right"]{
          .configOpt{ left: 2px; }
          .sizeLegend{ right: 0px; }
          .belowMatrix{ text-align: left; }
          .rows > .row > .label{ text-anchor: start; }
          .setMatrixWidthAdjust{ right: 0px;}
        }
        > .headerGroup > .header_display_control > .buttonSummaryRemove{ display: none !important; }
      }
      &[show_set_matrix=true] > .kshfSummary.setPairSummary{ display: block; }

    }// kshfSummary


    .summaryConfig_UnitName{
      display: none;
    }

    .highlightedAggrValuePointer{
      display: block;
      position: absolute;
      font-size: 0.7em;
      color: lighten(@color_bar_preview, 30%);
      text-shadow: 0px 0px 1px @color_bar_preview, 0px 0px 1px @color_bar_preview;
      opacity: 0.8;
    }

    .belowCatChart{
      position:relative;
      height: 18px;
      border-top: solid 1px #E9E9E9;
      > .chartAxis_Measure {
        > .measurePercentControl{ 
          right: 0px;
          top: 1px;
        }
        > .scaleModeControl{ 
          height: 13px;
        }
        > .highlightedMeasureValue{
          position: absolute;
          border-left: solid 1px lighten(@color_bar_preview,20%);
          margin-left: -1px;
          opacity: 0;
          .transition(opacity 200ms linear);
          > .highlightedAggrValuePointer{
            bottom: -14px;
            left: -3px;
          }
        }
        > .tickGroup > .tick{
          > .text{
            width: 20px;
            left: -10px;
            top: 2px;
            .transition(~'top 700ms ease-in-out');
          }
          > .line{
            width: 0px;
            border-left: dotted 1px @color_axis_line;
            .transition(~'top 700ms ease-in-out, height 700ms ease-in-out');
          }
        }
      }
      > .catMapColorScale{
        display: none;
        .flex-direction(row);
        .flex-wrap(wrap);
        margin-left: 60px;
        margin-right: 60px;
        margin-top: 1px;
        position: relative;
        height: 12px;
        padding: 0px;
        border: solid 1px lightgray;
        > .measurePercentControl{
          left: -35px;
          top: -1px;
        }
        > .scaleModeControl{
          position: absolute;
          right: -57px;
          top: -1px;
          color: gray;
          cursor: pointer;
          padding: 0px 2px;
          line-height: 0.7em;
          border-radius: 5px;
          border: solid 1px rgba(255,255,255,0);
          .transition(background-color 250ms linear);
          &[highlight="true"]{ 
            border-color: #B7CAAF;
            background-color: #E0E4D7;
            color: black;
          }
        }
        > .highlightedMeasureValue{
          position: absolute;
          top: 2px;
          margin-left: -3px; // center the circle
          height: 6px;
          width: 6px;
          border-radius: 10px;
          background-color: orangered;
          .transition(opacity 250ms linear);
          opacity: 0;
        }
        > .mapColorBlock{
          .flex(1);
          border: solid 0px rgba(1, 1, 1, 0);
        }
        > .scaleBound{
          color: gray;
          font-size: 11px;
          font-weight: 300;
          position: absolute;
          width: 22px;
          top: -1px;
          cursor: default;
          &.boundMin{
            left: -24px;
            text-align: right;
          }
          &.boundMax{
            right: -24px;
          }
        }
      }
    }

    &[measureLabelType="Compare_A"]{
      .aggrGlyph > .measureLabel{ color: @color_Compare_A !important; }
    }
    &[measureLabelType="Compare_B"]{
      .aggrGlyph > .measureLabel{ color: darken(@color_Compare_B, 10%) !important; }
    }
    &[measureLabelType="Compare_C"]{
      .aggrGlyph > .measureLabel{ 
        color: darken(@color_Compare_C, 10%) !important; 
        text-shadow: 0px 0px 1px black, 0px 0px 1px black;
      }
    }

    &[selectHighlight]{
      .percentileChart_Highlight{ display: block !important; }
      .aggrGlyph > .measureLabel{ 
        color: orangered;
        fill: orangered;
      }
      .kshfSummary:not([isMultiValued="true"]):hover {
        .aggrGlyph:not([selection="selected"]) > .measureLabel{ 
          // set the color to original color, map uses black, other summaries use color_item_count
          color: @color_item_count;
          fill: black;
        }
      }
      .timeSVG > [class^="measure_Highlight_"]{ opacity: 1 !important; }
      .previewLine{ opacity: 1 !important; }
      &:not([relativeMode]) .mapGlyph > .aggr.preview{
        opacity: 1;
//        .animation(mapPreviewAnimation 800ms infinite ease-in-out);
      }
      .mapGlyph > .aggr.preview{ opacity: 1; }
    }

    .selectVertLine {
      display: inline-block;
      background-color: #EEDDDE;
      width:2px;
      display:none;
      position:absolute;
    }

    .middleColumn{
      .display(inline-flex);
      .flex-direction(column);
      .flex(1);
      height: 100%;
      position: relative;
    }

    .NodeLinkAttrib{
      display: none;
    }

    .recordDisplay{
      position: relative;
      top: 0px;
      overflow: hidden; // Don't remove!
      .display(flex);
      .flex-direction(column);
      .transition(margin-top 700ms ease-in-out);

      .mapMouseControl{ display: none; }

      > .dropZone_recordView{
        display: none;
        position: relative;
        height: 100%;
        width: 100%;
        z-index: 50;
        cursor: s-resize;
        background-color: rgba(239, 236, 222, 1);
        border-radius: 0px 0px 40px 40px;
        border-style: solid;
        border-width: 0px 0px 2px 0px;
        border-color: rgb(145, 142, 123);

        text-align: center;
        margin-bottom: 5px;
        > .dropIcon{
          margin: 10px 0px 0px 0px;
          font-size: 2em;
          color: #918E7B;
          text-shadow: 1px 1px 1px #B8B6AB;
        }
        &:hover{ background-color: rgb(255, 188, 163); }
        &[readyToDrop=true]{ background-color: rgb(255, 188, 163); }
      }

      .recordDisplayWrapper{
        // TODO?
      }
      .recordMap_Base{
        height: 100%;
        background: white;
        .spatialQueryBox{
          display: none;
          position: absolute;
          border-width: 2px;
          border-style: solid;
          z-index: 800;
          pointer-events: none;
          > .clearSelection{
            display: none;
            position: absolute;
            right: -0.5em;
            top: -0.5em;
            background-color: white;
            pointer-events: all;
            border-radius: 1em;
            font-size: 1.2em;
            height: 15px;
            width: 15px;
            line-height: 0.9em;
          }
          &:hover{ 
            border-color: orangered !important;
            color: orangered;
            cursor: pointer;
          }
          &[active]{
            display: block;
            > .clearSelection{ display: block; }
            //background-color: initial;
          }

          &.spatialQueryBox_Filter   { border-color: #b1bdc5; box-shadow : 0px 0px 20px #5A7283; }
          &.spatialQueryBox_Highlight{ border-color: #ff7800; box-shadow : 0px 0px 5px darken(#ff7800, 20%); }
          &.spatialQueryBox_Compare_A{ border-color: @color_Compare_A; box-shadow : 0px 0px 20px @color_Compare_A; }
          &.spatialQueryBox_Compare_B{ border-color: @color_Compare_B; box-shadow : 0px 0px 20px @color_Compare_B; }
          &.spatialQueryBox_Compare_C{ border-color: @color_Compare_C; box-shadow : 0px 0px 10px #7A7A77, 0px 0px 10px #7A7A77; }
        }
        &[drawSelect]{
          cursor: cell !important;
          .leaflet-overlay-pane{ pointer-events: none; }
          .leaflet-interactive { pointer-events: none; }
        }
        &[drawSelect="Filter"]{
          .spatialQueryBox_Filter{ display: block; }
        }
        &[drawSelect="Highlight"]{
          .spatialQueryBox_Highlight{ display: block; }
        }
      }

      .leaflet-control > a:hover{
        color: orangered;
      }

      .recordMap_SVG{
        display: block;
        position: relative;
        height: 100%;
        left: 0px;
        top: 0px;
        overflow: visible;
      }

      .recordGroup_List{
        height: 100%;
        > .recordGroup{
          width: 100%;
          height: 100%;
          overflow-y: scroll;
          overflow-x: hidden;
          position: relative;

          background-color: white;
          // height is set dynamically by JavaScript
          .transition(~'height 700ms ease-in-out');

          > .dragWidthHandle{
            z-index: 200;
            height: 100%;
          }
        } // recordGroup
      }

      > .showMore{
        display: block;
        cursor: pointer;
        border: solid 1px lightgray;
        border-radius: 9px;

        box-shadow: 2px 2px 2px #D8D8D8;
        font-weight: 300;
        font-size: 0.8em;
        background-color: #eee;
        height: 20px;
        width: calc(~"100% - 23px");

        text-align: center;
        position:absolute;
        left: 4px;
        .transition(~"bottom 700ms ease 50ms");
        //.keyframes(~'fade, 0%{opacity:1;} 50%{opacity:0;} 100% {opacity:1;}');

        > .MoreText{
          display: inline-block;
          vertical-align: top;
          top: 2px;
          position: relative;
        }
        > .Count{
          font-size: 0.9em;
          top: 3px;
          position: relative;
          color: gray;
          &.CountAbove{
            float: left;
            margin-left: 3px;
          }
          &.CountBelow{
            float: right;
            margin-right: 3px;
          }
        }
        &:hover{
          box-shadow: 2px 2px 2px gray;
          > .MoreText{ text-decoration: underline; }
        }
        &[showMoreVisible=true]{
          opacity: 1;
          bottom: 4px;
        }
        &[showMoreVisible=false]{
          bottom: -27px;
          opacity: 0;
        }
      }

      &[showRank=true]  {
        .recordRank{ display: inline-block; }
        .itemRank_control{ color: black; }
      }
      &[showRank=false] {
        .recordRank{ display: none; }
        .itemRank_control{ color: gray; }
      }

      &[displayType="map"]{
        overflow: visible !important;
        .scrollToTop{ display: none; }
        .sortButton{ display: none; }
        .mapMouseControl{ 
          display: inline-block;
          padding: 1px;
          cursor: pointer;
          text-align: center;
          &:hover{ color: orangered; }
        }
        &[mapMouseControl="pan"]{
          .mapMouseControl:after{ content: "\f255" } // fa-hand-rock-o
          .mapMouseControl:hover:after{ content: "\f096" } // fa-square-o
        }
        &[mapMouseControl="draw"]{
          .mapMouseControl:after{ content: "\f096" } // fa-square-o
          .mapMouseControl:hover:after{ content: "\f255" } // fa-hand-rock-o
          .recordMap_Base{ cursor: crosshair; }
        }

        > .recordDisplayHeader > .recordColorScale{ .display(flex); }
        .recordGroup_List{ display: none; }

        .recordGroup{ overflow: visible !important; }
        .kshfRecord{
          stroke-width: 0.5px;
          stroke-opacity: 0.2;
          //paint-order: stroke;
          cursor: pointer;
          &[selection="onRecord"]{
            stroke: darken(@color_onRecord_back, 70%) !important;
            stroke-width: 2px;
            stroke-opacity: 1;
          }
          &[selection="highlighted"]{
            stroke: orangered !important;
            stroke-width: 1px;
            stroke-opacity: 1;
          }
          &[rec_compared^="A"]{ stroke: @color_Compare_A; }
          &[rec_compared^="B"]{ stroke: @color_Compare_B; }
          &[rec_compared^="C"]{ stroke: @color_Compare_C; }
        }
      }

      &[displayType="nodelink"]{
        overflow: visible !important;
        .scrollToTop{ display: none; }
        .sortButton{ display: none; }

        > .recordDisplayHeader > .recordColorScale{ .display(flex); }

        .recordGroup_List{ display: none; }

        .NodeLinkAttrib{
          display: block;
          > .NodeLinkAttribIcon{
            padding: 1px 3px;
            color: black;
            cursor: pointer;
            text-shadow: 0px 0px 5px white;
            &:hover{ color: orangered !important; }
          }
        }

        g.kshfRecord{
          > circle{
            stroke: gray;
            stroke-width: 1;
            fill: white;
            cursor: pointer;
            .transition(~'all 400ms ease-in-out');
          }
          > text.kshfRecord_label{
            display: none;
            font-size: 0.8em;
            pointer-events: none;
            text-shadow: 0px 0px 5px white, 0px 0px 5px white, 0px 0px 2px white;
          }
          &[selection="onRecord"]{
            > circle { stroke: darken(@color_onRecord_back, 70%); stroke-width: 2; }
            > text.kshfRecord_label{ display: block; }
          }
          &[selection="related"]{
            > circle { stroke: green; stroke-width: 2; }
            > text.kshfRecord_label{ display: block; fill: green; }
          }
          &[selection="highlighted"]{
            > circle { stroke: orangered; stroke-width: 2; }
          }
          &[rec_compared] > circle{ stroke-width: 2; }
          &[rec_compared^="A"]{ > circle { stroke: @color_Compare_A; } }
          &[rec_compared^="B"]{ > circle { stroke: @color_Compare_B; } }
          &[rec_compared^="C"]{ > circle { stroke: @color_Compare_C; } }
        }
        .recordLink {
          stroke: #999;
          stroke-opacity: .3;
        }
        &[hideLinks] {
          .recordLink { display: none; }
          .NodeLinkAttribIcon{ color: #BABABA; }
        }
        &[NodeLinkState="started"]{
          .NodeLinkAnim_Play{ display: none; }
        }
        &[NodeLinkState="stopped"]{
          .NodeLinkAnim_Pause{ display: none; }
        }
        .NodeLinkAnim_Refresh{ display: none; }
      }

      &[displayType="grid"][hasrecordview="true"] {
        .recordGroup {
          .display(flex);
          .flex-direction(row);
          .flex-wrap(wrap);
          .align-items(flex-start);
          .align-content(flex-start);
          .justify-content(space-around);
          
          > .kshfRecord{
            display: block;
            .align-self(flex-start);
            > .recordRank{
              vertical-align: top;
              margin-right: 2px;
              position: absolute;
            }
            > .content{ display: block; }
            > .recordToggleDetail{
              position: absolute;
              left: 0px;
              z-index: 2;
            }
          }
        }
      }
      &[displayType="list"][hasrecordview="true"] {
        .recordMap_Base{ display: none; }
        .recordNodeLink_SVG{ display: none; }
        .kshfRecord{
          .display(flex);
          .flex-direction(row);
          width: 100%;
          padding-top: 0px;
          border-top: solid 1px lightgray;
          > .recordSortCol{
            padding-right: 3px;
            padding-top: 2px;
            font-weight: 300;
            text-align: right;
            font-size: 0.8em;
            cursor: default;
            vertical-align: top;

            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            > .unitName{ margin-right: 1px; }
          }
          > .recordRank{
            float: left;
            margin-top: 4px;
            width: 15px;
            padding-right: 2px;
          }
          > .recordToggleDetail{
            width: 18px;
            text-align: center;
          }
          > .content{ .flex(1); }
        }
      }
      &[detailsToggle="zoom"] .recordGroup > .kshfRecord > .recordToggleDetail{
        display: inline-block;
        > .item_details_toggle:before{ content: "\f05a"; } // new: info-circle old bullseye
      }
      &[detailsToggle="one"] .recordGroup > .kshfRecord > .recordToggleDetail{
        display: inline-block;
        > .item_details_toggle:before{ content: "\f078"; }
      }

      &[hasRecordView="false"]{
        > .recordDisplayHeader{ display: none; }
        > .dropZone_recordView{ 
          .flex(1);
          position: absolute; 
        }
        .recordGroup{ display: none; }
      }
      &[hasRecordView="true"]{
        box-shadow: 0px 0px 2px rgb(137, 113, 60);
        margin: 0px 2px 2px 2px;
        > .recordDisplayHeader{ .display(flex); }
        > .dropZone_recordView{ position: absolute; }
      }
      &:hover{
        > .recordDisplayHeader > .sortColumn{
          opacity: 1;
          pointer-events: all;
        }
      }
      > .recordMap{
        .viewMap{ font-size: 0.9em; }
        .viewFit{ font-size: 1em; }
      }
    } // .recordDisplay

    .NodeLinkControl{
      position: absolute;
      right: 0px;
      bottom: 0px;
      margin: 5px;
      .fa{
        font-size: 0.9em;
        padding: 0px 2px;
        cursor: pointer;
        &:hover{ color: orangered; }
      }
      > .animationControl{
      }
    }

    .recordNodeLink_SVG{
      display: block;
      width: 100%;
      height: 100%;
    }

    .Summary_Set{
      display: block;
      position: relative;
      width: 100%;
      height: 100%;
      box-sizing: border-box;
      .user-select(none);
      &[noanim="false"]{
        .rows > .row {
          .transition(@reorder_animation);
          > .line{ .transition(~'all 200ms ease-in-out'); }
        }
      }
      > .summaryControls {
        display: block;
        position: relative;
        text-align: center;
        border-bottom: dotted 1px lightgray;
        margin-bottom: -1px;
        > .strengthControl{
          font-size: 0.7em;
          display: inline-block;
          background-color: #eaeaea;
          cursor: pointer;
          border-width: 1px 2px 1px 1px;
          border-style: solid;
          border-color: #DFDFDF;
          border-radius: 15px;
          cursor: default;
          padding: 1px 3px;
          color: #474747;
          cursor: pointer;
          .user-select(none);
          &:hover{ border-color: gray; }
          >.strengthLabel{
            display: none;
            width: 36px;
            font-style: italic;
            font-size: 0.8em;
            &:first-child{ text-align: left; }
            &:last-child{ text-align: right; }
          }
          >.strengthText{ padding: 0px 2px; }
        }
        > .configOpt{
          display: inline-block;
          position: absolute;
          top: 0px;
          font-size: 0.8em;
          background-color: rgb(234, 234, 234);
          cursor: pointer;
          border: 0px solid rgb(234, 234, 234);
          border-radius: 15px;
          cursor: default;
          .sdsdssds{
            color: gray;
            font-size: 0.9em;
            margin-right: 2px;
          }
          > .configOpt_icon{
            font-size: 1em;
            vertical-align: middle;
            background-color: white;
            display: inline-block;
            width: 15px;
            height: 15px;
            text-align: center;
            border-style: solid;
            border-radius: 20px;
            border-color: white;
            border-width: 0px;
            margin: 1px;
          }
          > .configOpt_label{
            color: rgb(71, 71, 71);
            display: none;
            font-size: 0.9em;
            padding-left: 3px;
            height: 15px;
            > .fa{ margin-right: 3px; }
          }
          &.configRowHeight{
            .fa:hover{
              color: orangered;
              cursor: pointer;
            }
          }
          &:hover > .configOpt_label{ display: inline; }
        }

        svg.sizeLegend{
          position: absolute;
          margin-top: 4px;
          overflow: visible;
          cursor: default;
          .user-select(none);
          > .legendHeader{
            font-size: 0.7em;
            alignment-baseline: central;
            fill: #969da3;
            text-anchor: start;
          }
          .legendMark{
            > .legendCircle{
              stroke: gray;
              stroke-width: 1;
              fill: none;
            }
            > .legendLine{
              stroke: gray;
              stroke-width: 1;
              stroke-dasharray: 0.8;
            }
            > .legendLabel{
              font-size: 0.7em;
              alignment-baseline: central;
              fill: gray;
            }
          }
        }
      } // summaryControls
      
      > .setMatrixWidthAdjust{
        display: block;
        position: absolute;
        width: 0px;
        height: 100%;
        pointer-events: all;
        border-width: 0px 2px 0px 0px;
        border-style: dotted;
        border-color: lightgray;
        cursor: col-resize;
        opacity: 0.5;
        z-index: 10;
        &:hover{
          border-style: solid;
          border-color: gray;
        }
      }

      > svg.setMatrix{
        display: block;
        border-right: dotted 1px lightgray;
      }

      .rows{
        position: relative;
        display: block;
        width: 100%;
        height: 100%;
        > .row{
          position: absolute;
          left: 0px;
          width: 100%;
          display: block;
          cursor: default;
          > .line{
            display: block;
            stroke: #DADADA;
            stroke-width: 1px;
            stroke-linecap: round;
            pointer-events: none;
          }
          > .label{
            font-family: Helvetica, Arial, sans-serif;
            font-size: 13px;
            font-weight: 300;
            font-size: 0.8em;
            alignment-baseline: middle;
            &.label_vert{
              text-anchor: start !important;
              background-color: white;
              display:none;
            }
          }
          &[selection]{
            > .label{
              font-weight: 700;
              &.label_vert[show=true]{ display: block; }
            }
            > .line{ stroke-width: 2px; }
          }
          &[selection="selected"] {
            > .label{ fill: @color_preview; }
            > .line{ stroke: @color_preview; }
          }
          &[selection="onRecord"] {
            > .label{ fill: darken(@color_onRecord_back, 60%); }
            > .line{ stroke: darken(@color_onRecord_back, 50%); }
          }
        }
      } // .rows

      g.setPairGroup[animate_position="true"]> .setPairGlyph { .transition(~'all 500ms linear'); }
      g.setPairGroup[animate_position="false"]> .setPairGlyph { .transition(none); }

      &[show_gridlines='false'] .rows > .row > .line{ opacity: 0.3; }

      > .belowMatrix{
        position: relative;
        height: 18px;
        >.matrixInfo{
          font-size: 0.7em;
          color: #919191;
          margin: 0px 3px;
          display: inline-block;
          cursor: default;
          font-style: italic;
          >.circleeee{
            width:10px;
            height: 10px;
            border-radius: 10px;
            display: inline-block;
            margin-right: 2px;
            background-color: @color_bars;
            &.borrderr{
              border-top: solid 2px #4000ff;
              border-left: solid 2px #4000ff;
              border-bottom: solid 2px #4000ff;
              border-radius: 5px 0px 0px 5px;
              width: 8px;
            }
          }
          .subsetCount_Text:after{ content: " Subsets ⊆"; }
        }
      }
    } // Summary_Set

    .scrollToTop{
      display: inline-block;
      visibility: hidden;
      color: red;
      cursor: pointer;
      color: #aaaaaa;
      .transition(~'color 300ms ease-in-out');
      &:hover{ color:#cb5454; }
    }

    .recordDisplayHeader{
        font-size: 0.9em;
        position: relative;
        background-color: #EBE5DF;
        .flex-direction(row);
        min-height: 18px;
        > .itemRank_control{
          display: none;
          width: 13px;
          text-align: right;
          font-weight: 100;
          font-size: 0.9em;
          cursor: pointer;
          &:before{ content: "\f102"; }
          &:hover{ color: orangered; }
        }
        > .recordColorScale{
          display: none;
          .flex-direction(row);
          .flex-wrap(wrap);
          width: 30px;
          margin: 2px;
          border: solid 1px lightgray;
          cursor: pointer;
          &:hover{ border: solid 1px gray; }
          > .recordColorScaleBin{ .flex(1); }
        }
        > .header_listSortColumn{
          display: inline-block;
          .align-self(flex-end);
          white-space: nowrap;
          text-align: right;
          padding-right: 1px;
          position: relative;
          > .sortColumnName{
            font-weight: 300;
            font-size: 0.9em;
            margin: 0px 0px 1px 3px;
            display: inline-block;
            cursor: default;
            .user-select(none);
            pointer-events: none;
          }
          > .listSortOptionSelect{
            width: 100%;
            bottom:0px;
          }
        }
        > .sortColumn{
          opacity: 0;
          .align-self(flex-end);
          width: 17px;
          height: 16px;
          padding-top: 3px;
          font-size: 0.9em;
          margin-bottom: 2px;
          vertical-align: bottom;
          .transition(opacity 250ms linear);
        }
        > .buttonRecordViewRemove{
          display: none;
          cursor: pointer;
          &:hover{ color: orangered; }
        }
        > .scrollToTop{ padding-top: 2px; }

        > .recordTextSearch {
          .flex(1);
          .align-self(flex-end);
          white-space: nowrap;
          display: inline-block;
          vertical-align: bottom;
          position: relative;
          height: 18px;
          > .dropZone_textSearch{
            display: none;
            position: absolute;
            height: 100%;
            width: 100%;
            z-index: 50;
            background-color: rgba(234, 234, 234, 1);
            border-radius: 5px;
            border-style: solid;
            border-width: 2px;
            border-color: gray;
            text-align: center;
            > .dropZone_textSearch_text{
              pointer-events: none;
              font-size: 0.7em;
              display: block;
              font-weight: 300;
            }
            &:hover{ background-color: rgb(255, 188, 163); }
          }
          > .mainTextSearch_input{
            display: none;
            font-size: 0.8em;
            font-weight: 700;
            color: #cb5454;
            padding: 0px 2px;
            background-color:rgba(255, 255, 255, 0);
            pointer-events: all;
            border-width: 0px;
            border-style: solid;
            border-color: #cb5454;
            margin: 1px;
            width: calc(~"100% - 17px");
            .transition(~'background-color 150ms linear');
            &:focus{
              outline-color: #cb5454;
              outline-width: 2px;
            }
            &:hover{
              border-width: 1px;
              background-color: white;
              margin: 0px;
            }
            &::-webkit-input-placeholder{
              color: #cb5454;
              font-weight: 300;
            }
            &:focus::-webkit-input-placeholder{
              color: #F3CDCD;
            }
          }
          > .searchIcon{
            display: none;
            font-size: 0.8em;
            padding-left: 1px;
            color: #cb5454;
          }
          > .clearSearchText{
            display: none;
            position: absolute;
            right: 6px;
            top: 1px;
            cursor: pointer;
            color: gray;
            &:hover{ color: #cb5454; }
          }
          > .textSearchMode{
            display: none;
            position: absolute;
            top: 2px;
            cursor: pointer;
            opacity: 0.5;
            border-radius: 6px;
            font-size: 0.7em;
            padding: 1px 4px;
            color: white;
            font-weight: 300;
            &:hover{ opacity: 1; }
            &[mode="and"]{
              background-color: @color_query_and;
              right: 20px;
              &:after{ content: "all"; }
            }
            &[mode="or"]{
              background-color: @color_query_or;
              right: 41px;
              &:after{ content: "some"; }
            }
          }
          &[isActive="true"]{
            > .mainTextSearch_input{ display: inline-block; }
            > .searchIcon{ display: inline-block; }
          }
          &[mode="and"] > .textSearchMode[mode="and"]{ 
            opacity: 1;
            box-shadow: 0px 0px 2px black;
          }
          &[mode="or"] > .textSearchMode[mode="or"]{ 
            opacity: 1;
            box-shadow: 0px 0px 2px black;
          }
        } // mainTextSearch
    } // recordDisplayHeader

    [class^="recordView_Set"]{
      color: gray;
      padding: 1px;
      cursor: pointer;
      display: none;
      &:hover{ color: orangered; }
    }
    .recordView_HeaderSet{
      font-weight: 300;
      font-size: 0.8em;
      cursor: default;
      padding: 1px;
      display: none;
      margin-right: 2px;
      vertical-align: top;
    }

    .leaflet-container{
      font: inherit;
    }
}

@-webkit-keyframes stretchdelay {.stretchdelay_do;}
@-moz-keyframes stretchdelay {.stretchdelay_do;}
@-ms-keyframes stretchdelay {.stretchdelay_do;}
@-o-keyframes stretchdelay {.stretchdelay_do;}
@keyframes stretchdelay {.stretchdelay_do;}

.stretchdelay_do () {
    0%, 40%, 100% {
      .transform(scaleY(0.4));
    }  20% {
      .transform(scaleY(0.8));
      background-color: rgb(250, 119, 70);
    }
}

.mapPreviewAnimation_do () {
    0% {
      opacity: 0;
    }
    90%, 100% {
      opacity: 1;
    }
}

@-webkit-keyframes mapPreviewAnimation {.mapPreviewAnimation_do;}
@-moz-keyframes mapPreviewAnimation {.mapPreviewAnimation_do;}
@-ms-keyframes mapPreviewAnimation {.mapPreviewAnimation_do;}
@-o-keyframes mapPreviewAnimation {.mapPreviewAnimation_do;}
@keyframes mapPreviewAnimation {.mapPreviewAnimation_do;}



.tipsy {
    font-size: 10px;
    position: absolute;
    padding: 5px;
    z-index: 100000;
    pointer-events: none;
    .tipsy-inner {
        font-family: Helvetica, Arial, sans-serif;
        padding: 3px;
        font-size: 1.2em;
        background-color: #000;
        color: #FFF;
        max-width: 400px;
        text-align: center;
        font-weight: 300px;
        border-radius: 3px;
    }
    .tipsy-inner{
        span.big{
            font-size: 1.4em;
        }
        span.action{
            font-weight: 700;
        }
    }
    .unitName{
      margin-left: 1px;
      margin-right: 1px;
      color: lightgray;
    }
    .mapItemName{
      display: block;
      border-bottom: solid 1px white;
      font-weight: 600;
    }
    .mapTooltipValue{
      font-size: 0.9em;
      font-weight: 500;
    }
    .mapTooltipLabel{
      font-size: 0.9em;
      font-weight: 300;
    }

    &.tipsyFilterAnd{
        .tipsy-inner{
            background-color: @color_query_and;
        }
        .tipsy-arrow{
            border-color: @color_query_and;
        }
    }
    &.tipsyFilterOr{
        .tipsy-inner{
            background-color: @color_query_or;
        }
        .tipsy-arrow{
            border-color: @color_query_or;
        }
    }
    &.tipsyFilterNot{
        .tipsy-inner{
            background-color: @color_query_not;
        }
        .tipsy-arrow{
            border-color: @color_query_not;
        }
    }
    &.tipsyFilterLock{
        .tipsy-inner{
            background-color: @color_Compare_A;
        }
        .tipsy-arrow{
            border-color: @color_Compare_A;
        }
    }

}

/* Uncomment for shadow */
/*.tipsy-inner { box-shadow: 0 0 5px #000000; -webkit-box-shadow: 0 0 5px #000000; -moz-box-shadow: 0 0 5px #000000; }*/

.tipsy-arrow { position: absolute; width: 0; height: 0; line-height: 0; border: 5px dashed #000; }

.tipsy-n .tipsy-arrow { top: 0px; left: 50%; margin-left: -5px; border-bottom-style: solid; border-top: none; border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-nw .tipsy-arrow { top: 0; left: 10px; border-bottom-style: solid; border-top: none; border-left-color: transparent !important; border-right-color: transparent !important;}
.tipsy-ne .tipsy-arrow { top: 0; right: 10px; border-bottom-style: solid; border-top: none;  border-left-color: transparent !important; border-right-color: transparent !important;}
.tipsy-s .tipsy-arrow { bottom: 0; left: 50%; margin-left: -5px; border-top-style: solid; border-bottom: none;  border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-sw .tipsy-arrow { bottom: 0; left: 10px; border-top-style: solid; border-bottom: none;  border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-se .tipsy-arrow { bottom: 0; right: 10px; border-top-style: solid; border-bottom: none; border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-e .tipsy-arrow { right: 0; top: 50%; margin-top: -5px; border-left-style: solid; border-right: none; border-top-color: transparent !important; border-bottom-color: transparent !important; }
.tipsy-w .tipsy-arrow { left: 0; top: 50%; margin-top: -5px; border-right-style: solid; border-left: none; border-top-color: transparent !important; border-bottom-color: transparent !important; }

